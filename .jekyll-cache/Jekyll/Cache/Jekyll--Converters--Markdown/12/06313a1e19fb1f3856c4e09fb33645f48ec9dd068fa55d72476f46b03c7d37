I"<h1 id="introduction">Introduction</h1>

<p>Being able to reuse code is incredibly useful, but to make our code even more useful, we need to bundle it up so that it can be used from other programs. The primary way this is done in Python is by using modules. In this hands-on lab, we’ll define and use our custom module and built-in modules to ensure the using_modules.py file can execute properly.</p>

<h1 id="scenario">Scenario</h1>

<p>We already have a file called <code class="language-plaintext highlighter-rouge">using_modules.py</code> that we need to add imports to so that we can run it without error by running the following:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ python3.7 using_modules.py
$
</code></pre></div></div>

<p>We need to use the built-in <code class="language-plaintext highlighter-rouge">math</code> module and create the <code class="language-plaintext highlighter-rouge">strhelpers</code> module that contains a few different functions. By running the <code class="language-plaintext highlighter-rouge">using_modules.py</code> file, we’ll see the errors preventing the file from running and that can guide us towards the changes we need to make. To implement the functions in <code class="language-plaintext highlighter-rouge">strhelpers</code>, we’ll want to use the <code class="language-plaintext highlighter-rouge">random.shuffle</code> function.</p>

<h1 id="log-in-using-vs-code-in-the-browser">Log In Using VS Code in the Browser</h1>

<p>Navigate to the provided public IP address on port 8080 (e.g. http://PUBLIC_IP_ADDRESS:8080).</p>

<h1 id="import-the-math-module-within-using_modulespy">Import the math Module within using_modules.py</h1>

<ol>
  <li>
    <p>Under the <strong>File</strong> menu, select <strong>Open File</strong>….</p>
  </li>
  <li>
    <p>Select the <code class="language-plaintext highlighter-rouge">using_modules.py</code> file from the list that appears.</p>
  </li>
  <li>
    <p>Under the <strong>Terminal</strong> menu, select <strong>New Terminal</strong>.</p>
  </li>
  <li>
    <p>In the terminal, run the script and observe the error.</p>
  </li>
</ol>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>python3.7 using_modules.py
</code></pre></div></div>

<ol>
  <li>Add the following to the code under the comment to import the <code class="language-plaintext highlighter-rouge">math</code> module.</li>
</ol>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>import math
</code></pre></div></div>
<ol>
  <li>Save the changes.</li>
</ol>

<p>Rerun the script in the terminal and observe the new error.</p>

<p>python3.7 using_modules.py
Create the strhelpers Module and Implement the reverse Function
Under the File menu, select New File.</p>

<p>Save the file as strhelpers.py.</p>

<p>Add the following code to the file.</p>

<p>def reverse (str_value):
    return str_value[::-1]
Save the changes.</p>

<p>Navigate back to the using_modules.py file.</p>

<p>Add the following code under the comment describing the second task and before the name variable is assigned.</p>

<p>from strhelpers import reverse
Save the changes.</p>

<p>Rerun the script in the terminal and observe the new error.</p>

<p>python3.7 using_modules.py
Implement str_shuffle and Import It As shuffle
Navigate back to the strhelpers.py file.</p>

<p>Add the following code to the top of the file.</p>

<p>from random import shuffle as l_shuffle
Add the following code to the bottom of the file.</p>

<p>def str_shuffle(str_value):
    str_list = list(str_value)
    l_shuffle(str_list)
    return ““.join(str_list)
Save the changes.</p>

<p>Navigate back to the using_modules.py file.</p>

<p>Change the line added in the previous task (from strhelpers import reverse) to the following.</p>

<p>from strhelpers import reverse, str_shuffle as shuffle
Save the changes.</p>

<p>Rerun the script in the terminal and verify there are no errors.</p>

<p>python3.7 using_modules.py</p>
:ET