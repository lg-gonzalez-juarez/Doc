I"ñ<p><a href="https://linuxacademy.com/cp/modules/view/id/621">link</a></p>

<h2 id="241-creating-and-using-dataframe">24.1. Creating and Using DataFrame</h2>

<p><a href="https://pandas.pydata.org/pandas-docs/stable/index.html">pandas</a> is a Python package that bundles easy-to-use data structures with data analysis tools. The primary data structure for <code class="language-plaintext highlighter-rouge">pandas</code> is the <a href="https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.html?highlight=dataframe#pandas.DataFrame">dataframe</a>. We will be using dataframes throughout this section. A dataframe contains rows and columns and is very similar to a spreadsheet.</p>

<p><code class="language-plaintext highlighter-rouge">pandas</code> is very important to data scientists and other operations that involve math, science, and engineering. In this lesson, we focus on dataframes, how we create one, and what information can be determined from the dataframe.</p>

<h3 id="install-pandas">Install pandas</h3>

<div class="language-powershell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">python</span><span class="w"> </span><span class="nt">-m</span><span class="w"> </span><span class="nx">pip</span><span class="w"> </span><span class="nx">install</span><span class="w"> </span><span class="nx">pandas</span><span class="w">
</span></code></pre></div></div>

<h3 id="creating-dataframes">Creating Dataframes</h3>

<p>Dataframes can be made directly from databases, from python lists, and from data files. For this lesson, we will use a python list.</p>

<div class="language-powershell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="err">&gt;&gt;&gt;</span><span class="w"> </span><span class="n">import</span><span class="w"> </span><span class="nx">pandas</span><span class="w"> </span><span class="nx">as</span><span class="w"> </span><span class="nx">pd</span><span class="w">
</span><span class="err">&gt;&gt;&gt;</span><span class="w"> 
</span><span class="err">&gt;&gt;&gt;</span><span class="w"> </span><span class="c"># define the data as a list; made up data for an imaginary vet service</span><span class="w">
</span><span class="err">&gt;&gt;&gt;</span><span class="w"> </span><span class="kr">data</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="p">[</span><span class="w">
     </span><span class="p">(</span><span class="s2">"Dexter"</span><span class="p">,</span><span class="s2">"Johnsons"</span><span class="p">,</span><span class="s2">"dog"</span><span class="p">,</span><span class="s2">"shiba inu"</span><span class="p">,</span><span class="s2">"red sesame"</span><span class="p">,</span><span class="mf">1.5</span><span class="p">,</span><span class="mi">35</span><span class="p">,</span><span class="s2">"m"</span><span class="p">,</span><span class="n">False</span><span class="p">,</span><span class="s2">"both"</span><span class="p">,</span><span class="n">True</span><span class="p">),</span><span class="w">
     </span><span class="p">(</span><span class="s2">"Alfred"</span><span class="p">,</span><span class="s2">"Johnsons"</span><span class="p">,</span><span class="s2">"cat"</span><span class="p">,</span><span class="s2">"mix"</span><span class="p">,</span><span class="s2">"tuxedo"</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">12</span><span class="p">,</span><span class="s2">"m"</span><span class="p">,</span><span class="n">True</span><span class="p">,</span><span class="s2">"indoor"</span><span class="p">,</span><span class="n">True</span><span class="p">),</span><span class="w">
     </span><span class="p">(</span><span class="s2">"Petra"</span><span class="p">,</span><span class="s2">"Smith"</span><span class="p">,</span><span class="s2">"cat"</span><span class="p">,</span><span class="s2">"ragdoll"</span><span class="p">,</span><span class="s2">"calico"</span><span class="p">,</span><span class="n">None</span><span class="p">,</span><span class="mi">10</span><span class="p">,</span><span class="s2">"f"</span><span class="p">,</span><span class="n">False</span><span class="p">,</span><span class="s2">"both"</span><span class="p">,</span><span class="n">True</span><span class="p">),</span><span class="w">
     </span><span class="p">(</span><span class="s2">"Ava"</span><span class="p">,</span><span class="s2">"Smith"</span><span class="p">,</span><span class="s2">"dog"</span><span class="p">,</span><span class="s2">"mix"</span><span class="p">,</span><span class="s2">"blk/wht"</span><span class="p">,</span><span class="mi">12</span><span class="p">,</span><span class="mi">32</span><span class="p">,</span><span class="s2">"f"</span><span class="p">,</span><span class="n">True</span><span class="p">,</span><span class="s2">"both"</span><span class="p">,</span><span class="n">False</span><span class="p">),</span><span class="w">
     </span><span class="p">(</span><span class="s2">"Schroder"</span><span class="p">,</span><span class="s2">"Brown"</span><span class="p">,</span><span class="s2">"cat"</span><span class="p">,</span><span class="s2">"mix"</span><span class="p">,</span><span class="s2">"orange"</span><span class="p">,</span><span class="mi">13</span><span class="p">,</span><span class="mi">15</span><span class="p">,</span><span class="s2">"m"</span><span class="p">,</span><span class="n">False</span><span class="p">,</span><span class="s2">"indoor"</span><span class="p">,</span><span class="n">True</span><span class="p">),</span><span class="w">
     </span><span class="p">(</span><span class="s2">"Blackbeard"</span><span class="p">,</span><span class="s2">"Brown"</span><span class="p">,</span><span class="s2">"bird"</span><span class="p">,</span><span class="s2">"parrot"</span><span class="p">,</span><span class="s2">"multi"</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="s2">"f"</span><span class="p">,</span><span class="n">False</span><span class="p">,</span><span class="s2">"indoor"</span><span class="p">,),</span><span class="w">
 </span><span class="p">]</span><span class="w">
</span><span class="err">&gt;&gt;&gt;</span><span class="w"> 
</span><span class="err">&gt;&gt;&gt;</span><span class="w"> </span><span class="c"># define the labels</span><span class="w">
</span><span class="err">&gt;&gt;&gt;</span><span class="w"> </span><span class="n">labels</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="p">[</span><span class="s2">"name"</span><span class="p">,</span><span class="s2">"owner"</span><span class="p">,</span><span class="s2">"type"</span><span class="p">,</span><span class="s2">"breed"</span><span class="p">,</span><span class="s2">"color"</span><span class="p">,</span><span class="s2">"age"</span><span class="p">,</span><span class="s2">"weight"</span><span class="p">,</span><span class="s2">"gender"</span><span class="p">,</span><span class="s2">"health issues"</span><span class="p">,</span><span class="s2">"indoor/outboor"</span><span class="p">,</span><span class="s2">"vaccinated"</span><span class="p">]</span><span class="w">
</span><span class="err">&gt;&gt;&gt;</span><span class="w"> 
</span><span class="err">&gt;&gt;&gt;</span><span class="w"> </span><span class="c"># create dataframe</span><span class="w">
</span><span class="err">&gt;&gt;&gt;</span><span class="w"> </span><span class="n">vet_records</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">pd.DataFrame.from_records</span><span class="p">(</span><span class="kr">data</span><span class="p">,</span><span class="w"> </span><span class="n">columns</span><span class="o">=</span><span class="n">labels</span><span class="p">)</span><span class="w">
</span><span class="err">&gt;&gt;&gt;</span><span class="w"> </span><span class="n">print</span><span class="p">(</span><span class="n">vet_records</span><span class="p">)</span><span class="w">
         </span><span class="n">name</span><span class="w">     </span><span class="nx">owner</span><span class="w">  </span><span class="nx">type</span><span class="w">      </span><span class="nx">breed</span><span class="w">       </span><span class="nx">color</span><span class="w">   </span><span class="nx">age</span><span class="w">  </span><span class="nx">weight</span><span class="w"> </span><span class="nx">gender</span><span class="w">  </span><span class="nx">health</span><span class="w"> </span><span class="nx">issues</span><span class="w"> </span><span class="nx">indoor/outboor</span><span class="w"> </span><span class="nx">vaccinated</span><span class="w">
</span><span class="mi">0</span><span class="w">      </span><span class="n">Dexter</span><span class="w">  </span><span class="nx">Johnsons</span><span class="w">   </span><span class="nx">dog</span><span class="w">  </span><span class="nx">shiba</span><span class="w"> </span><span class="nx">inu</span><span class="w">  </span><span class="nx">red</span><span class="w"> </span><span class="nx">sesame</span><span class="w">   </span><span class="nx">1.5</span><span class="w">      </span><span class="nx">35</span><span class="w">      </span><span class="nx">m</span><span class="w">          </span><span class="nx">False</span><span class="w">           </span><span class="nx">both</span><span class="w">       </span><span class="nx">True</span><span class="w">
</span><span class="mi">1</span><span class="w">      </span><span class="n">Alfred</span><span class="w">  </span><span class="nx">Johnsons</span><span class="w">   </span><span class="nx">cat</span><span class="w">        </span><span class="nx">mix</span><span class="w">      </span><span class="nx">tuxedo</span><span class="w">   </span><span class="nx">4.0</span><span class="w">      </span><span class="nx">12</span><span class="w">      </span><span class="nx">m</span><span class="w">           </span><span class="nx">True</span><span class="w">         </span><span class="nx">indoor</span><span class="w">       </span><span class="nx">True</span><span class="w">
</span><span class="mi">2</span><span class="w">       </span><span class="n">Petra</span><span class="w">     </span><span class="nx">Smith</span><span class="w">   </span><span class="nx">cat</span><span class="w">    </span><span class="nx">ragdoll</span><span class="w">      </span><span class="nx">calico</span><span class="w">   </span><span class="nx">NaN</span><span class="w">      </span><span class="nx">10</span><span class="w">      </span><span class="nx">f</span><span class="w">          </span><span class="nx">False</span><span class="w">           </span><span class="nx">both</span><span class="w">       </span><span class="nx">True</span><span class="w">
</span><span class="mi">3</span><span class="w">         </span><span class="n">Ava</span><span class="w">     </span><span class="nx">Smith</span><span class="w">   </span><span class="nx">dog</span><span class="w">        </span><span class="nx">mix</span><span class="w">     </span><span class="nx">blk/wht</span><span class="w">  </span><span class="nx">12.0</span><span class="w">      </span><span class="nx">32</span><span class="w">      </span><span class="nx">f</span><span class="w">           </span><span class="nx">True</span><span class="w">           </span><span class="nx">both</span><span class="w">      </span><span class="nx">False</span><span class="w">
</span><span class="mi">4</span><span class="w">    </span><span class="n">Schroder</span><span class="w">     </span><span class="nx">Brown</span><span class="w">   </span><span class="nx">cat</span><span class="w">        </span><span class="nx">mix</span><span class="w">      </span><span class="nx">orange</span><span class="w">  </span><span class="nx">13.0</span><span class="w">      </span><span class="nx">15</span><span class="w">      </span><span class="nx">m</span><span class="w">          </span><span class="nx">False</span><span class="w">         </span><span class="nx">indoor</span><span class="w">       </span><span class="nx">True</span><span class="w">
</span><span class="mi">5</span><span class="w">  </span><span class="n">Blackbeard</span><span class="w">     </span><span class="nx">Brown</span><span class="w">  </span><span class="nx">bird</span><span class="w">     </span><span class="nx">parrot</span><span class="w">       </span><span class="nx">multi</span><span class="w">   </span><span class="nx">5.0</span><span class="w">       </span><span class="nx">3</span><span class="w">      </span><span class="nx">f</span><span class="w">          </span><span class="nx">False</span><span class="w">         </span><span class="nx">indoor</span><span class="w">       </span><span class="nx">None</span><span class="w">
</span><span class="err">&gt;&gt;&gt;</span><span class="w">
</span></code></pre></div></div>

<h3 id="a-note-of-caution">A Note of Caution</h3>

<p>Changes and updates to a dataframe are only permanent if saved to the dataframe. So for example we might say <code class="language-plaintext highlighter-rouge">vet_records = ...</code> to permanently change the dataframe vet_records. In many cases keeping a reference dataframe is a good practice. For example, <code class="language-plaintext highlighter-rouge">vet_records_dogs = vet_records[vet_records.type=="dog"]</code> instead of <code class="language-plaintext highlighter-rouge">vet_records = vet_records[vet_records.type=="dog"]</code>. This will leave you with a dataframe to reference that contains the unaltered data.</p>

<h3 id="examining-dataframes">Examining Dataframes</h3>

<p>You may often create a dataframe with little to no idea of what the data actually looks like. Enter <code class="language-plaintext highlighter-rouge">head()</code> and <code class="language-plaintext highlighter-rouge">tail()</code>.</p>

<div class="language-powershell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="err">&gt;&gt;&gt;</span><span class="w"> </span><span class="n">vet_records.head</span><span class="p">()</span><span class="w">
       </span><span class="n">name</span><span class="w">     </span><span class="nx">owner</span><span class="w"> </span><span class="nx">type</span><span class="w">      </span><span class="nx">breed</span><span class="w">       </span><span class="nx">color</span><span class="w">   </span><span class="nx">age</span><span class="w">  </span><span class="nx">weight</span><span class="w"> </span><span class="nx">gender</span><span class="w">  </span><span class="nx">health</span><span class="w"> </span><span class="nx">issues</span><span class="w"> </span><span class="nx">indoor/outdoor</span><span class="w"> </span><span class="nx">vaccinated</span><span class="w">
</span><span class="mi">0</span><span class="w">    </span><span class="n">Dexter</span><span class="w">  </span><span class="nx">Johnsons</span><span class="w">  </span><span class="nx">dog</span><span class="w">  </span><span class="nx">shiba</span><span class="w"> </span><span class="nx">inu</span><span class="w">  </span><span class="nx">red</span><span class="w"> </span><span class="nx">sesame</span><span class="w">   </span><span class="nx">1.5</span><span class="w">      </span><span class="nx">35</span><span class="w">      </span><span class="nx">m</span><span class="w">          </span><span class="nx">False</span><span class="w">           </span><span class="nx">both</span><span class="w">       </span><span class="nx">True</span><span class="w">
</span><span class="mi">1</span><span class="w">    </span><span class="n">Alfred</span><span class="w">  </span><span class="nx">Johnsons</span><span class="w">  </span><span class="nx">cat</span><span class="w">        </span><span class="nx">mix</span><span class="w">      </span><span class="nx">tuxedo</span><span class="w">   </span><span class="nx">4.0</span><span class="w">      </span><span class="nx">12</span><span class="w">      </span><span class="nx">m</span><span class="w">           </span><span class="nx">True</span><span class="w">         </span><span class="nx">indoor</span><span class="w">       </span><span class="nx">True</span><span class="w">
</span><span class="mi">2</span><span class="w">     </span><span class="n">Petra</span><span class="w">     </span><span class="nx">Smith</span><span class="w">  </span><span class="nx">cat</span><span class="w">    </span><span class="nx">ragdoll</span><span class="w">      </span><span class="nx">calico</span><span class="w">   </span><span class="nx">NaN</span><span class="w">      </span><span class="nx">10</span><span class="w">      </span><span class="nx">f</span><span class="w">          </span><span class="nx">False</span><span class="w">           </span><span class="nx">both</span><span class="w">       </span><span class="nx">True</span><span class="w">
</span><span class="mi">3</span><span class="w">       </span><span class="n">Ava</span><span class="w">     </span><span class="nx">Smith</span><span class="w">  </span><span class="nx">dog</span><span class="w">        </span><span class="nx">mix</span><span class="w">     </span><span class="nx">blk/wht</span><span class="w">  </span><span class="nx">12.0</span><span class="w">      </span><span class="nx">32</span><span class="w">      </span><span class="nx">f</span><span class="w">           </span><span class="nx">True</span><span class="w">           </span><span class="nx">both</span><span class="w">      </span><span class="nx">False</span><span class="w">
</span><span class="mi">4</span><span class="w">  </span><span class="n">Schroder</span><span class="w">     </span><span class="nx">Brown</span><span class="w">  </span><span class="nx">cat</span><span class="w">        </span><span class="nx">mix</span><span class="w">      </span><span class="nx">orange</span><span class="w">  </span><span class="nx">13.0</span><span class="w">      </span><span class="nx">15</span><span class="w">      </span><span class="nx">m</span><span class="w">          </span><span class="nx">False</span><span class="w">         </span><span class="nx">indoor</span><span class="w">       </span><span class="nx">True</span><span class="w">
</span><span class="err">&gt;&gt;&gt;</span><span class="w"> </span><span class="n">vet_records.tail</span><span class="p">()</span><span class="w">
         </span><span class="n">name</span><span class="w">     </span><span class="nx">owner</span><span class="w">  </span><span class="nx">type</span><span class="w">    </span><span class="nx">breed</span><span class="w">    </span><span class="nx">color</span><span class="w">   </span><span class="nx">age</span><span class="w">  </span><span class="nx">weight</span><span class="w"> </span><span class="nx">gender</span><span class="w">  </span><span class="nx">health</span><span class="w"> </span><span class="nx">issues</span><span class="w"> </span><span class="nx">indoor/outdoor</span><span class="w"> </span><span class="nx">vaccinated</span><span class="w">
</span><span class="mi">1</span><span class="w">      </span><span class="n">Alfred</span><span class="w">  </span><span class="nx">Johnsons</span><span class="w">   </span><span class="nx">cat</span><span class="w">      </span><span class="nx">mix</span><span class="w">   </span><span class="nx">tuxedo</span><span class="w">   </span><span class="nx">4.0</span><span class="w">      </span><span class="nx">12</span><span class="w">      </span><span class="nx">m</span><span class="w">           </span><span class="nx">True</span><span class="w">         </span><span class="nx">indoor</span><span class="w">       </span><span class="nx">True</span><span class="w">
</span><span class="mi">2</span><span class="w">       </span><span class="n">Petra</span><span class="w">     </span><span class="nx">Smith</span><span class="w">   </span><span class="nx">cat</span><span class="w">  </span><span class="nx">ragdoll</span><span class="w">   </span><span class="nx">calico</span><span class="w">   </span><span class="nx">NaN</span><span class="w">      </span><span class="nx">10</span><span class="w">      </span><span class="nx">f</span><span class="w">          </span><span class="nx">False</span><span class="w">           </span><span class="nx">both</span><span class="w">       </span><span class="nx">True</span><span class="w">
</span><span class="mi">3</span><span class="w">         </span><span class="n">Ava</span><span class="w">     </span><span class="nx">Smith</span><span class="w">   </span><span class="nx">dog</span><span class="w">      </span><span class="nx">mix</span><span class="w">  </span><span class="nx">blk/wht</span><span class="w">  </span><span class="nx">12.0</span><span class="w">      </span><span class="nx">32</span><span class="w">      </span><span class="nx">f</span><span class="w">           </span><span class="nx">True</span><span class="w">           </span><span class="nx">both</span><span class="w">      </span><span class="nx">False</span><span class="w">
</span><span class="mi">4</span><span class="w">    </span><span class="n">Schroder</span><span class="w">     </span><span class="nx">Brown</span><span class="w">   </span><span class="nx">cat</span><span class="w">      </span><span class="nx">mix</span><span class="w">   </span><span class="nx">orange</span><span class="w">  </span><span class="nx">13.0</span><span class="w">      </span><span class="nx">15</span><span class="w">      </span><span class="nx">m</span><span class="w">          </span><span class="nx">False</span><span class="w">         </span><span class="nx">indoor</span><span class="w">       </span><span class="nx">True</span><span class="w">
</span><span class="mi">5</span><span class="w">  </span><span class="n">Blackbeard</span><span class="w">     </span><span class="nx">Brown</span><span class="w">  </span><span class="nx">bird</span><span class="w">   </span><span class="nx">parrot</span><span class="w">    </span><span class="nx">multi</span><span class="w">   </span><span class="nx">5.0</span><span class="w">       </span><span class="nx">3</span><span class="w">      </span><span class="nx">f</span><span class="w">          </span><span class="nx">False</span><span class="w">         </span><span class="nx">indoor</span><span class="w">       </span><span class="nx">None</span><span class="w">
</span><span class="err">&gt;&gt;&gt;</span><span class="w">
</span></code></pre></div></div>

<h3 id="dtypes">dtypes</h3>

<p>dtypes show you the types of data in the dataframe by column. If the <code class="language-plaintext highlighter-rouge">dtype</code> is <code class="language-plaintext highlighter-rouge">object</code>, this indicates that <code class="language-plaintext highlighter-rouge">pandas</code> is seeing that data as more than one type.</p>

<div class="language-powershell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="err">&gt;&gt;&gt;</span><span class="w"> </span><span class="n">vet_records.dtypes</span><span class="w">
</span><span class="nx">name</span><span class="w">               </span><span class="nx">object</span><span class="w">
</span><span class="n">owner</span><span class="w">              </span><span class="nx">object</span><span class="w">
</span><span class="kr">type</span><span class="w">               </span><span class="n">object</span><span class="w">
</span><span class="nx">breed</span><span class="w">              </span><span class="nx">object</span><span class="w">
</span><span class="n">color</span><span class="w">              </span><span class="nx">object</span><span class="w">
</span><span class="n">age</span><span class="w">               </span><span class="nx">float64</span><span class="w">
</span><span class="n">weight</span><span class="w">              </span><span class="nx">int64</span><span class="w">
</span><span class="n">gender</span><span class="w">             </span><span class="nx">object</span><span class="w">
</span><span class="n">health</span><span class="w"> </span><span class="nx">issues</span><span class="w">        </span><span class="nx">bool</span><span class="w">
</span><span class="n">indoor/outdoor</span><span class="w">     </span><span class="nx">object</span><span class="w">
</span><span class="n">vaccinated</span><span class="w">         </span><span class="nx">object</span><span class="w">
</span><span class="n">dtype:</span><span class="w"> </span><span class="nx">object</span><span class="w">
</span><span class="err">&gt;&gt;&gt;</span><span class="w">
</span></code></pre></div></div>

<p>Notice all the string columns are listed as an object. This is because a string type takes a maximum length argument; during imports, that information is not available, so they are imported as an object so they can be variable length.</p>

<h3 id="grouping-and-counting-data">Grouping and Counting Data</h3>

<p>Using counting and grouping can help you get a better grasp of the data.</p>

<p>We can count how many records we have for a specific column.</p>

<div class="language-powershell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="err">&gt;&gt;&gt;</span><span class="w"> </span><span class="n">vet_records.type.count</span><span class="p">()</span><span class="w">
</span><span class="mi">6</span><span class="w">
</span><span class="err">&gt;&gt;&gt;</span><span class="w">
</span></code></pre></div></div>

<p>However, it is important to remember that pandas ignores missing data. For example, we have a missing age and a missing vaccinated value.</p>

<div class="language-powershell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="err">&gt;&gt;&gt;</span><span class="w"> </span><span class="n">vet_records.vaccinated</span><span class="w">
</span><span class="nx">0</span><span class="w">     </span><span class="nx">True</span><span class="w">
</span><span class="mi">1</span><span class="w">     </span><span class="n">True</span><span class="w">
</span><span class="nx">2</span><span class="w">     </span><span class="nx">True</span><span class="w">
</span><span class="mi">3</span><span class="w">    </span><span class="n">False</span><span class="w">
</span><span class="nx">4</span><span class="w">     </span><span class="nx">True</span><span class="w">
</span><span class="mi">5</span><span class="w">     </span><span class="n">None</span><span class="w">
</span><span class="nx">Name:</span><span class="w"> </span><span class="nx">vaccinated</span><span class="p">,</span><span class="w"> </span><span class="nx">dtype:</span><span class="w"> </span><span class="nx">object</span><span class="w">
</span><span class="err">&gt;&gt;&gt;</span><span class="w"> </span><span class="n">vet_records.vaccinated.count</span><span class="p">()</span><span class="w">
</span><span class="mi">5</span><span class="w">
</span><span class="err">&gt;&gt;&gt;</span><span class="w"> </span><span class="n">vet_records.age.count</span><span class="p">()</span><span class="w">
</span><span class="mi">5</span><span class="w">
</span><span class="err">&gt;&gt;&gt;</span><span class="w">
</span></code></pre></div></div>

<p>We will understand why <code class="language-plaintext highlighter-rouge">pandas</code> ignores missing values later.</p>

<h3 id="groupby">groupby()</h3>

<p><a href="https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.groupby.html?highlight=groupby#pandas.DataFrame.groupby">groupby()</a> can be used to aggregate data based on a column; in this case, we are going to use <code class="language-plaintext highlighter-rouge">type</code> to aggregate and then count.</p>

<div class="language-powershell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="err">&gt;&gt;&gt;</span><span class="w"> </span><span class="n">vet_records.groupby</span><span class="p">(</span><span class="s1">'type'</span><span class="p">)</span><span class="o">.</span><span class="nf">count</span><span class="p">()</span><span class="w">
      </span><span class="n">name</span><span class="w">  </span><span class="nx">owner</span><span class="w">  </span><span class="nx">breed</span><span class="w">  </span><span class="nx">color</span><span class="w">  </span><span class="nx">age</span><span class="w">  </span><span class="nx">weight</span><span class="w">  </span><span class="nx">gender</span><span class="w">  </span><span class="nx">health</span><span class="w"> </span><span class="nx">issues</span><span class="w">  </span><span class="nx">indoor/outboor</span><span class="w">  </span><span class="nx">vaccinated</span><span class="w">
</span><span class="kr">type</span><span class="w">                                                                                           
</span><span class="n">bird</span><span class="w">     </span><span class="nx">1</span><span class="w">      </span><span class="nx">1</span><span class="w">      </span><span class="nx">1</span><span class="w">      </span><span class="nx">1</span><span class="w">    </span><span class="nx">1</span><span class="w">       </span><span class="nx">1</span><span class="w">       </span><span class="nx">1</span><span class="w">              </span><span class="nx">1</span><span class="w">               </span><span class="nx">1</span><span class="w">           </span><span class="nx">0</span><span class="w">
</span><span class="n">cat</span><span class="w">      </span><span class="nx">3</span><span class="w">      </span><span class="nx">3</span><span class="w">      </span><span class="nx">3</span><span class="w">      </span><span class="nx">3</span><span class="w">    </span><span class="nx">2</span><span class="w">       </span><span class="nx">3</span><span class="w">       </span><span class="nx">3</span><span class="w">              </span><span class="nx">3</span><span class="w">               </span><span class="nx">3</span><span class="w">           </span><span class="nx">3</span><span class="w">
</span><span class="n">dog</span><span class="w">      </span><span class="nx">2</span><span class="w">      </span><span class="nx">2</span><span class="w">      </span><span class="nx">2</span><span class="w">      </span><span class="nx">2</span><span class="w">    </span><span class="nx">2</span><span class="w">       </span><span class="nx">2</span><span class="w">       </span><span class="nx">2</span><span class="w">              </span><span class="nx">2</span><span class="w">               </span><span class="nx">2</span><span class="w">           </span><span class="nx">2</span><span class="w">
</span><span class="err">&gt;&gt;&gt;</span><span class="w">
</span></code></pre></div></div>

<p>Notice that <code class="language-plaintext highlighter-rouge">count()</code> counted each value based on based on <code class="language-plaintext highlighter-rouge">type</code>. Most times, you just want a simple count; <code class="language-plaintext highlighter-rouge">value_counts()</code> does just that.</p>

<div class="language-powershell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="err">&gt;&gt;&gt;</span><span class="w"> </span><span class="n">vet_records.type.value_counts</span><span class="p">()</span><span class="w">
</span><span class="n">cat</span><span class="w">     </span><span class="nx">3</span><span class="w">
</span><span class="n">dog</span><span class="w">     </span><span class="nx">2</span><span class="w">
</span><span class="n">bird</span><span class="w">    </span><span class="nx">1</span><span class="w">
</span><span class="n">Name:</span><span class="w"> </span><span class="nx">type</span><span class="p">,</span><span class="w"> </span><span class="nx">dtype:</span><span class="w"> </span><span class="nx">int64</span><span class="w">
</span><span class="err">&gt;&gt;&gt;</span><span class="w"> 
</span></code></pre></div></div>

<h2 id="242-slicing-and-dicing-dataframe">24.2. Slicing and Dicing DataFrame</h2>

<p>I think it is important to remind you of the caution from the previous lesson:</p>

<p>Changes and updates to a DataFrame is only permanent if saved to the DataFrame. For example, we might say <code class="language-plaintext highlighter-rouge">vet_records = ...</code> to permanently change the DataFrame <code class="language-plaintext highlighter-rouge">vet_records</code>. In many cases, keeping a reference DataFrame is a good practice. For example, <code class="language-plaintext highlighter-rouge">vet_records_dogs = vet_records[vet_records.type=="dog"]</code> instead of <code class="language-plaintext highlighter-rouge">vet_records = vet_records[vet_records.type=="dog"]</code>, leaves you with a DataFrame to reference the unaltered data.</p>

<p>I encourage you to always leave a copy of the unaltered DataFrame that does not get used. There are times when I have made changes and then wished I had the original data.</p>

<p>With that remark, letâs make a copy of <code class="language-plaintext highlighter-rouge">vet_records</code> that will be an archive.</p>

<div class="language-powershell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="err">&gt;&gt;&gt;</span><span class="w"> </span><span class="n">vet_records_archive</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">vet_records</span><span class="w">
</span><span class="err">&gt;&gt;&gt;</span><span class="w"> </span><span class="nx">vet_records_archive</span><span class="w">
         </span><span class="n">name</span><span class="w">     </span><span class="nx">owner</span><span class="w">  </span><span class="nx">type</span><span class="w">      </span><span class="nx">breed</span><span class="w">       </span><span class="nx">color</span><span class="w">   </span><span class="nx">age</span><span class="w">  </span><span class="nx">weight</span><span class="w"> </span><span class="nx">gender</span><span class="w">  </span><span class="nx">health</span><span class="w"> </span><span class="nx">issues</span><span class="w"> </span><span class="nx">indoor/outdoor</span><span class="w"> </span><span class="nx">vaccinated</span><span class="w">
</span><span class="mi">0</span><span class="w">      </span><span class="n">Dexter</span><span class="w">  </span><span class="nx">Johnsons</span><span class="w">   </span><span class="nx">dog</span><span class="w">  </span><span class="nx">shiba</span><span class="w"> </span><span class="nx">inu</span><span class="w">  </span><span class="nx">red</span><span class="w"> </span><span class="nx">sesame</span><span class="w">   </span><span class="nx">1.5</span><span class="w">      </span><span class="nx">35</span><span class="w">      </span><span class="nx">m</span><span class="w">          </span><span class="nx">False</span><span class="w">           </span><span class="nx">both</span><span class="w">       </span><span class="nx">True</span><span class="w">
</span><span class="mi">1</span><span class="w">      </span><span class="n">Alfred</span><span class="w">  </span><span class="nx">Johnsons</span><span class="w">   </span><span class="nx">cat</span><span class="w">        </span><span class="nx">mix</span><span class="w">      </span><span class="nx">tuxedo</span><span class="w">   </span><span class="nx">4.0</span><span class="w">      </span><span class="nx">12</span><span class="w">      </span><span class="nx">m</span><span class="w">           </span><span class="nx">True</span><span class="w">         </span><span class="nx">indoor</span><span class="w">       </span><span class="nx">True</span><span class="w">
</span><span class="mi">2</span><span class="w">       </span><span class="n">Petra</span><span class="w">     </span><span class="nx">Smith</span><span class="w">   </span><span class="nx">cat</span><span class="w">    </span><span class="nx">ragdoll</span><span class="w">      </span><span class="nx">calico</span><span class="w">   </span><span class="nx">NaN</span><span class="w">      </span><span class="nx">10</span><span class="w">      </span><span class="nx">f</span><span class="w">          </span><span class="nx">False</span><span class="w">           </span><span class="nx">both</span><span class="w">       </span><span class="nx">True</span><span class="w">
</span><span class="mi">3</span><span class="w">         </span><span class="n">Ava</span><span class="w">     </span><span class="nx">Smith</span><span class="w">   </span><span class="nx">dog</span><span class="w">        </span><span class="nx">mix</span><span class="w">     </span><span class="nx">blk/wht</span><span class="w">  </span><span class="nx">12.0</span><span class="w">      </span><span class="nx">32</span><span class="w">      </span><span class="nx">f</span><span class="w">           </span><span class="nx">True</span><span class="w">           </span><span class="nx">both</span><span class="w">      </span><span class="nx">False</span><span class="w">
</span><span class="mi">4</span><span class="w">    </span><span class="n">Schroder</span><span class="w">     </span><span class="nx">Brown</span><span class="w">   </span><span class="nx">cat</span><span class="w">        </span><span class="nx">mix</span><span class="w">      </span><span class="nx">orange</span><span class="w">  </span><span class="nx">13.0</span><span class="w">      </span><span class="nx">15</span><span class="w">      </span><span class="nx">m</span><span class="w">          </span><span class="nx">False</span><span class="w">         </span><span class="nx">indoor</span><span class="w">       </span><span class="nx">True</span><span class="w">
</span><span class="mi">5</span><span class="w">  </span><span class="n">Blackbeard</span><span class="w">     </span><span class="nx">Brown</span><span class="w">  </span><span class="nx">bird</span><span class="w">     </span><span class="nx">parrot</span><span class="w">       </span><span class="nx">multi</span><span class="w">   </span><span class="nx">5.0</span><span class="w">       </span><span class="nx">3</span><span class="w">      </span><span class="nx">f</span><span class="w">          </span><span class="nx">False</span><span class="w">         </span><span class="nx">indoor</span><span class="w">       </span><span class="nx">None</span><span class="w">
</span><span class="err">&gt;&gt;&gt;</span><span class="w"> 
</span></code></pre></div></div>

<h3 id="slicing-filtering-data">Slicing (Filtering) Data</h3>

<p>Slicing data, that is, filtering parts of the DataFrame is easy with pandas. It functions very similar to slicing lists in Python. The benefit is that you can use named columns.</p>

<p>Letâs get the weight column:</p>

<div class="language-powershell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="err">&gt;&gt;&gt;</span><span class="w"> </span><span class="c"># Create a pandas series from the DataFrame</span><span class="w">
</span><span class="err">&gt;&gt;&gt;</span><span class="w"> </span><span class="n">weight</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">vet_records</span><span class="p">[</span><span class="s1">'weight'</span><span class="p">]</span><span class="w">
</span><span class="err">&gt;&gt;&gt;</span><span class="w"> </span><span class="n">weight</span><span class="w">
</span><span class="nx">0</span><span class="w">    </span><span class="nx">35</span><span class="w">
</span><span class="mi">1</span><span class="w">    </span><span class="mi">12</span><span class="w">
</span><span class="mi">2</span><span class="w">    </span><span class="mi">10</span><span class="w">
</span><span class="mi">3</span><span class="w">    </span><span class="mi">32</span><span class="w">
</span><span class="mi">4</span><span class="w">    </span><span class="mi">15</span><span class="w">
</span><span class="mi">5</span><span class="w">     </span><span class="mi">3</span><span class="w">
</span><span class="n">Name:</span><span class="w"> </span><span class="nx">weight</span><span class="p">,</span><span class="w"> </span><span class="nx">dtype:</span><span class="w"> </span><span class="nx">int64</span><span class="w">
</span><span class="err">&gt;&gt;&gt;</span><span class="w"> 
</span></code></pre></div></div>

<p>That was easy to do! However, we have a list of weights with no context of who they belong to. That is fine if we are doing research on just weight values, but you usually need more context. We can get specific data, such as the weight of a dog.</p>

<div class="language-powershell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">### Boolean Filter</span><span class="w">
</span><span class="err">&gt;&gt;&gt;</span><span class="w"> </span><span class="c"># Collect the dog weights only using a boolean filter</span><span class="w">
</span><span class="err">&gt;&gt;&gt;</span><span class="w"> </span><span class="n">dog_weight</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">vet_records.weight</span><span class="p">[</span><span class="n">vet_records.type</span><span class="o">==</span><span class="s1">'dog'</span><span class="p">]</span><span class="w">
</span><span class="err">&gt;&gt;&gt;</span><span class="w"> </span><span class="n">dog_weight</span><span class="w">
</span><span class="nx">0</span><span class="w">    </span><span class="nx">35</span><span class="w">
</span><span class="mi">3</span><span class="w">    </span><span class="mi">32</span><span class="w">
</span><span class="n">Name:</span><span class="w"> </span><span class="nx">weight</span><span class="p">,</span><span class="w"> </span><span class="nx">dtype:</span><span class="w"> </span><span class="nx">int64</span><span class="w">
</span><span class="err">&gt;&gt;&gt;</span><span class="w"> 
</span></code></pre></div></div>

<p>Notice how I used boolean to filter this for just the dog weights. In this case, it evaluated if the weight was associated with the type âdogâ; if that evaluated to <code class="language-plaintext highlighter-rouge">True</code>, then the weight was included.</p>

<p>We can get all the data for dogs:</p>

<div class="language-powershell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="err">&gt;&gt;&gt;</span><span class="w"> </span><span class="n">dogs</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">vet_records</span><span class="p">[</span><span class="n">vet_records.type</span><span class="o">==</span><span class="s1">'dog'</span><span class="p">]</span><span class="w">
</span><span class="err">&gt;&gt;&gt;</span><span class="w"> </span><span class="n">dogs</span><span class="w">
     </span><span class="nx">name</span><span class="w">     </span><span class="nx">owner</span><span class="w"> </span><span class="nx">type</span><span class="w">      </span><span class="nx">breed</span><span class="w">       </span><span class="nx">color</span><span class="w">   </span><span class="nx">age</span><span class="w">  </span><span class="nx">weight</span><span class="w"> </span><span class="nx">gender</span><span class="w">  </span><span class="nx">health</span><span class="w"> </span><span class="nx">issues</span><span class="w"> </span><span class="nx">indoor/outdoor</span><span class="w"> </span><span class="nx">vaccinated</span><span class="w">
</span><span class="mi">0</span><span class="w">  </span><span class="n">Dexter</span><span class="w">  </span><span class="nx">Johnsons</span><span class="w">  </span><span class="nx">dog</span><span class="w">  </span><span class="nx">shiba</span><span class="w"> </span><span class="nx">inu</span><span class="w">  </span><span class="nx">red</span><span class="w"> </span><span class="nx">sesame</span><span class="w">   </span><span class="nx">1.5</span><span class="w">      </span><span class="nx">35</span><span class="w">      </span><span class="nx">m</span><span class="w">          </span><span class="nx">False</span><span class="w">           </span><span class="nx">both</span><span class="w">       </span><span class="nx">True</span><span class="w">
</span><span class="mi">3</span><span class="w">     </span><span class="n">Ava</span><span class="w">     </span><span class="nx">Smith</span><span class="w">  </span><span class="nx">dog</span><span class="w">        </span><span class="nx">mix</span><span class="w">     </span><span class="nx">blk/wht</span><span class="w">  </span><span class="nx">12.0</span><span class="w">      </span><span class="nx">32</span><span class="w">      </span><span class="nx">f</span><span class="w">           </span><span class="nx">True</span><span class="w">           </span><span class="nx">both</span><span class="w">      </span><span class="nx">False</span><span class="w">
</span><span class="err">&gt;&gt;&gt;</span><span class="w"> 
</span></code></pre></div></div>

<p>Notice this is still a boolean filter, <code class="language-plaintext highlighter-rouge">vet_records.type=='dog'</code> returns a <code class="language-plaintext highlighter-rouge">True</code> or <code class="language-plaintext highlighter-rouge">False</code>.</p>

<h3 id="loc-and-iloc">loc and iloc</h3>

<ul>
  <li><code class="language-plaintext highlighter-rouge">loc</code> allows you to use column names to slice data</li>
  <li><code class="language-plaintext highlighter-rouge">iloc</code> requires the use of index numbers. (Example: <code class="language-plaintext highlighter-rouge">.iloc[row, column]</code>) 
Remember: Python indexes starting at 0.</li>
</ul>

<p>We can use <code class="language-plaintext highlighter-rouge">loc</code> to get the name and owner of each pet.</p>

<div class="language-powershell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="err">&gt;&gt;&gt;</span><span class="w"> </span><span class="n">vet_records.loc</span><span class="p">[:,[</span><span class="s2">"name"</span><span class="p">,</span><span class="w"> </span><span class="s2">"owner"</span><span class="p">]]</span><span class="w">
         </span><span class="n">name</span><span class="w">     </span><span class="nx">owner</span><span class="w">
</span><span class="mi">0</span><span class="w">      </span><span class="n">Dexter</span><span class="w">  </span><span class="nx">Johnsons</span><span class="w">
</span><span class="mi">1</span><span class="w">      </span><span class="n">Alfred</span><span class="w">  </span><span class="nx">Johnsons</span><span class="w">
</span><span class="mi">2</span><span class="w">       </span><span class="n">Petra</span><span class="w">     </span><span class="nx">Smith</span><span class="w">
</span><span class="mi">3</span><span class="w">         </span><span class="n">Ava</span><span class="w">     </span><span class="nx">Smith</span><span class="w">
</span><span class="mi">4</span><span class="w">    </span><span class="n">Schroder</span><span class="w">     </span><span class="nx">Brown</span><span class="w">
</span><span class="mi">5</span><span class="w">  </span><span class="n">Blackbeard</span><span class="w">     </span><span class="nx">Brown</span><span class="w">
</span><span class="err">&gt;&gt;&gt;</span><span class="w"> 
</span></code></pre></div></div>

<p>We can also get just the third and fourth record.</p>

<div class="language-powershell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="err">&gt;&gt;&gt;</span><span class="w"> </span><span class="n">vet_records.loc</span><span class="p">[</span><span class="mi">2</span><span class="p">:</span><span class="mi">3</span><span class="p">,[</span><span class="s2">"name"</span><span class="p">,</span><span class="w"> </span><span class="s2">"owner"</span><span class="p">]]</span><span class="w">
    </span><span class="n">name</span><span class="w">  </span><span class="nx">owner</span><span class="w">
</span><span class="mi">2</span><span class="w">  </span><span class="n">Petra</span><span class="w">  </span><span class="nx">Smith</span><span class="w">
</span><span class="mi">3</span><span class="w">    </span><span class="n">Ava</span><span class="w">  </span><span class="nx">Smith</span><span class="w">
</span><span class="err">&gt;&gt;&gt;</span><span class="w"> 
</span></code></pre></div></div>

<p>Using <code class="language-plaintext highlighter-rouge">iloc</code> means we use indexes to filter our data. Letâs get the color and age of the third and fourth pet. The third pet (Petra) will be a row index of 2, and the fourth pet (Ava) has a row index of 3. If we examine the <code class="language-plaintext highlighter-rouge">vet_records</code> DataFrame, we will see that the color index is 4, and the age index is 5.</p>

<div class="language-powershell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="err">&gt;&gt;&gt;</span><span class="w"> </span><span class="n">vet_records.iloc</span><span class="p">[[</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">],[</span><span class="mi">4</span><span class="p">,</span><span class="mi">5</span><span class="p">]]</span><span class="w">
     </span><span class="n">color</span><span class="w">   </span><span class="nx">age</span><span class="w">
</span><span class="mi">2</span><span class="w">   </span><span class="n">calico</span><span class="w">   </span><span class="nx">NaN</span><span class="w">
</span><span class="mi">3</span><span class="w">  </span><span class="n">blk/wht</span><span class="w">  </span><span class="nx">12.0</span><span class="w">
</span><span class="err">&gt;&gt;&gt;</span><span class="w">
</span></code></pre></div></div>

<h3 id="isin">isin</h3>

<p><code class="language-plaintext highlighter-rouge">.isin</code> can be used to gather data about a list of items. For example, letâs get the data for âDexterâ and âBlackbeardâ.</p>

<div class="language-powershell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="err">&gt;&gt;&gt;</span><span class="w"> </span><span class="n">vet_records</span><span class="p">[</span><span class="n">vet_records.name.isin</span><span class="p">([</span><span class="s1">'Dexter'</span><span class="p">,</span><span class="s1">'Blackbeard'</span><span class="p">])]</span><span class="w">
         </span><span class="n">name</span><span class="w">     </span><span class="nx">owner</span><span class="w">  </span><span class="nx">type</span><span class="w">      </span><span class="nx">breed</span><span class="w">       </span><span class="nx">color</span><span class="w">  </span><span class="nx">age</span><span class="w">  </span><span class="nx">weight</span><span class="w"> </span><span class="nx">gender</span><span class="w">  </span><span class="nx">health</span><span class="w"> </span><span class="nx">issues</span><span class="w"> </span><span class="nx">indoor/outdoor</span><span class="w"> </span><span class="nx">vaccinated</span><span class="w">
</span><span class="mi">0</span><span class="w">      </span><span class="n">Dexter</span><span class="w">  </span><span class="nx">Johnsons</span><span class="w">   </span><span class="nx">dog</span><span class="w">  </span><span class="nx">shiba</span><span class="w"> </span><span class="nx">inu</span><span class="w">  </span><span class="nx">red</span><span class="w"> </span><span class="nx">sesame</span><span class="w">  </span><span class="nx">1.5</span><span class="w">      </span><span class="nx">35</span><span class="w">      </span><span class="nx">m</span><span class="w">          </span><span class="nx">False</span><span class="w">           </span><span class="nx">both</span><span class="w">       </span><span class="nx">True</span><span class="w">
</span><span class="mi">5</span><span class="w">  </span><span class="n">Blackbeard</span><span class="w">     </span><span class="nx">Brown</span><span class="w">  </span><span class="nx">bird</span><span class="w">     </span><span class="nx">parrot</span><span class="w">       </span><span class="nx">multi</span><span class="w">  </span><span class="nx">5.0</span><span class="w">       </span><span class="nx">3</span><span class="w">      </span><span class="nx">f</span><span class="w">          </span><span class="nx">False</span><span class="w">         </span><span class="nx">indoor</span><span class="w">       </span><span class="nx">None</span><span class="w">
</span><span class="err">&gt;&gt;&gt;</span><span class="w"> 
</span></code></pre></div></div>

<p>The tilde symbol <code class="language-plaintext highlighter-rouge">(~)</code> can be used as the logical NOT operator. This means we ask for all pets excluding Dexter or Blackbeard:</p>

<div class="language-powershell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="err">&gt;&gt;&gt;</span><span class="w"> </span><span class="n">vet_records</span><span class="p">[</span><span class="n">~vet_records.name.isin</span><span class="p">([</span><span class="s1">'Dexter'</span><span class="p">,</span><span class="s1">'Blackbeard'</span><span class="p">])]</span><span class="w">
       </span><span class="n">name</span><span class="w">     </span><span class="nx">owner</span><span class="w"> </span><span class="nx">type</span><span class="w">    </span><span class="nx">breed</span><span class="w">    </span><span class="nx">color</span><span class="w">   </span><span class="nx">age</span><span class="w">  </span><span class="nx">weight</span><span class="w"> </span><span class="nx">gender</span><span class="w">  </span><span class="nx">health</span><span class="w"> </span><span class="nx">issues</span><span class="w"> </span><span class="nx">indoor/outdoor</span><span class="w"> </span><span class="nx">vaccinated</span><span class="w">
</span><span class="mi">1</span><span class="w">    </span><span class="n">Alfred</span><span class="w">  </span><span class="nx">Johnsons</span><span class="w">  </span><span class="nx">cat</span><span class="w">      </span><span class="nx">mix</span><span class="w">   </span><span class="nx">tuxedo</span><span class="w">   </span><span class="nx">4.0</span><span class="w">      </span><span class="nx">12</span><span class="w">      </span><span class="nx">m</span><span class="w">           </span><span class="nx">True</span><span class="w">         </span><span class="nx">indoor</span><span class="w">       </span><span class="nx">True</span><span class="w">
</span><span class="mi">2</span><span class="w">     </span><span class="n">Petra</span><span class="w">     </span><span class="nx">Smith</span><span class="w">  </span><span class="nx">cat</span><span class="w">  </span><span class="nx">ragdoll</span><span class="w">   </span><span class="nx">calico</span><span class="w">   </span><span class="nx">NaN</span><span class="w">      </span><span class="nx">10</span><span class="w">      </span><span class="nx">f</span><span class="w">          </span><span class="nx">False</span><span class="w">           </span><span class="nx">both</span><span class="w">       </span><span class="nx">True</span><span class="w">
</span><span class="mi">3</span><span class="w">       </span><span class="n">Ava</span><span class="w">     </span><span class="nx">Smith</span><span class="w">  </span><span class="nx">dog</span><span class="w">      </span><span class="nx">mix</span><span class="w">  </span><span class="nx">blk/wht</span><span class="w">  </span><span class="nx">12.0</span><span class="w">      </span><span class="nx">32</span><span class="w">      </span><span class="nx">f</span><span class="w">           </span><span class="nx">True</span><span class="w">           </span><span class="nx">both</span><span class="w">      </span><span class="nx">False</span><span class="w">
</span><span class="mi">4</span><span class="w">  </span><span class="n">Schroder</span><span class="w">     </span><span class="nx">Brown</span><span class="w">  </span><span class="nx">cat</span><span class="w">      </span><span class="nx">mix</span><span class="w">   </span><span class="nx">orange</span><span class="w">  </span><span class="nx">13.0</span><span class="w">      </span><span class="nx">15</span><span class="w">      </span><span class="nx">m</span><span class="w">          </span><span class="nx">False</span><span class="w">         </span><span class="nx">indoor</span><span class="w">       </span><span class="nx">True</span><span class="w">
</span><span class="err">&gt;&gt;&gt;</span><span class="w"> 
</span></code></pre></div></div>

<h2 id="243-creating-pivot-tables">24.3. Creating Pivot Tables</h2>

<p>Pivot tables are a favorite use in spreadsheets. They provide complicated data in an easy-to-use format. Luckily, pandas has a <a href="https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.pivot_table.html">pivot table</a> function.</p>

<h3 id="pivot_table">.pivot_table</h3>

<p>The pivot table takes a number of arguments:</p>

<ul>
  <li>data: the DataFrame to use</li>
  <li>values: what columns to aggregate</li>
  <li>index: what columns to group on</li>
  <li>aggfunc: how to aggregate the values</li>
</ul>

<p>There are more arguments for advanced operations; for more details, see the <a href="https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.pivot_table.html">official documentation</a>.</p>

<p>Letâs create a pivot table of <code class="language-plaintext highlighter-rouge">age</code> and <code class="language-plaintext highlighter-rouge">weight</code> columns by <code class="language-plaintext highlighter-rouge">type</code> and <code class="language-plaintext highlighter-rouge">breed</code>.</p>

<div class="language-powershell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="err">&gt;&gt;&gt;</span><span class="w"> </span><span class="n">table</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">pd.pivot_table</span><span class="p">(</span><span class="n">vet_records</span><span class="p">,</span><span class="w"> </span><span class="nx">values</span><span class="o">=</span><span class="p">[</span><span class="s1">'weight'</span><span class="p">,</span><span class="w"> </span><span class="s1">'age'</span><span class="p">],</span><span class="w"> </span><span class="n">index</span><span class="o">=</span><span class="p">[</span><span class="s1">'type'</span><span class="p">,</span><span class="w"> </span><span class="s1">'breed'</span><span class="p">],</span><span class="w"> </span><span class="n">aggfunc</span><span class="o">=</span><span class="n">sum</span><span class="p">)</span><span class="w">
</span><span class="err">&gt;&gt;&gt;</span><span class="w"> </span><span class="n">table</span><span class="w">
                 </span><span class="nx">age</span><span class="w">  </span><span class="nx">weight</span><span class="w">
</span><span class="kr">type</span><span class="w"> </span><span class="n">breed</span><span class="w">                  
</span><span class="n">bird</span><span class="w"> </span><span class="nx">parrot</span><span class="w">      </span><span class="nx">5.0</span><span class="w">       </span><span class="nx">3</span><span class="w">
</span><span class="n">cat</span><span class="w">  </span><span class="nx">mix</span><span class="w">        </span><span class="nx">17.0</span><span class="w">      </span><span class="nx">27</span><span class="w">
     </span><span class="n">ragdoll</span><span class="w">     </span><span class="nx">0.0</span><span class="w">      </span><span class="nx">10</span><span class="w">
</span><span class="n">dog</span><span class="w">  </span><span class="nx">mix</span><span class="w">        </span><span class="nx">12.0</span><span class="w">      </span><span class="nx">32</span><span class="w">
     </span><span class="n">shiba</span><span class="w"> </span><span class="nx">inu</span><span class="w">   </span><span class="nx">1.5</span><span class="w">      </span><span class="nx">35</span><span class="w">
</span><span class="err">&gt;&gt;&gt;</span><span class="w">
</span></code></pre></div></div>

<p>You can import NumPy and use its functions as the aggfunc, such as aggfunc=np.mean.</p>

<blockquote>
  <blockquote>
    <blockquote>
      <p>import numpy as np
table = pd.pivot_table(vet_records, values=[âweightâ, âageâ], index=[âtypeâ, âbreedâ], aggfunc=np.mean)
table
                 age  weight
type breed                <br />
bird parrot      5.0     3.0
cat  mix         8.5    13.5
     ragdoll     NaN    10.0
dog  mix        12.0    32.0
     shiba inu   1.5    35.0</p>

      <p>Pivot tables are not difficult to make in pandas, and can greatly benefit supporting your âargumentâ.</p>
    </blockquote>
  </blockquote>
</blockquote>

<h2 id="244-stats-with-dataframes">24.4. Stats With Dataframes</h2>

<h2 id="hands-on-24-">Hands on 24-</h2>
<p>https://app.linuxacademy.com/hands-on-labs/fc56cb34-866b-4f0c-9841-b119b59b97d1?redirect_uri=https:%2F%2Flinuxacademy.com%2Fcp%2Fmodules%2Fview%2Fid%2F621</p>

<p>[]:</p>

:ET