I"A<h1 id="indexing-and-slicing-python-strings">Indexing and Slicing Python Strings</h1>

<h2 id="introduction">Introduction</h2>

<p>Accessing characters, whether they are single or multiple, is an essential skill for working with strings in any programming language. In Python, we do this by indexing and slicing the string. In this hands-on lab, we‚Äôll go through writing some code to demonstrate that we understand how to use indexing and slicing by printing out different pieces of information about a string back to the user. To feel comfortable completing this lab you‚Äôll want to be familiar with working with string literals, indexing and slicing strings, and printing information out to the screen.</p>

<h2 id="the-scenario">The Scenario</h2>

<p>We‚Äôre going to write a script that takes user input, so that we‚Äôre not working with static content, and print out some information and permutations of the string that the user has entered. Our string-info.py script will print the following information about the user provided message:</p>

<ul>
  <li>The first character</li>
  <li>The last character</li>
  <li>The middle character (for even length strings we‚Äôll return the integer just after the exact center).</li>
  <li>Every even index character</li>
  <li>Every odd index character</li>
  <li>The message in reverse</li>
</ul>

<p>Here‚Äôs our script in action:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ string-info.py
Enter a message: Test Message
First character: T
Last character: e
Middle character: e
Even index characters: Ts esg
Odd index characters: etMsae
Reversed message: egasseM tseT
</code></pre></div></div>

<p>To feel comfortable completing this lab you‚Äôll want to be familiar with the following:</p>

<p>Working with string literals: Watch the ‚ÄúStrings and String Operators‚Äù video from the Certified Entry-Level Python Programmer Certification course.
Indexing and slicing strings: Watch the ‚ÄúString Indexing and Slicing‚Äù video from the Certified Entry-Level Python Programmer Certification course.
Printing to the screen: Watch the videos from the ‚ÄúInput and Output Operations‚Äù section of the Certified Entry-Level Python Programmer Certification course.</p>

<h2 id="logging-in">Logging In</h2>

<p>There are a couple of ways to get in and work with the code. One is to use the credentials provided in the hands-on lab overview page, log in with SSH, and use a text editor in the terminal.</p>

<p>The other is using VS Code in the browser. If you‚Äôd like to go this route, then you will need to navigate to the public IP address of the workstation server (provided in the hands-on lab overview page) on port 8080 (example: http://PUBLIC_IP:8080).</p>

<p>If you‚Äôd like to use VS Code in the browser then you will need to navigate to the public IP address of the workstation server on port 8080 (example: http://PUBLIC_IP:8080)</p>

<p>Create the <strong>string-info.py</strong> Script and Take User Input</p>

<p>We want to be able to execute our script, so to begin let‚Äôs create an empty script with a shebang and make it executable:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ echo '#!/usr/bin/env python3.7' &gt; string-info.py
$ chmod +x string-info.py
</code></pre></div></div>

<p>Now we can either edit the file with something like something like vim (if we got into the environment via SSH) or edit it by using File &gt; Open if we came in via the VS Code application.
Our goal here is to have the script take in some user input, then print a handful of lines to the screen. Let‚Äôs take the user input now:</p>

<p><strong>string-info.py</strong></p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>#!/usr/bin/env python3.7

message = input("Enter a message: ")
Print the First, Last, and Middle Characters from the User's Input
</code></pre></div></div>

<p>To print the first, last, and middle characters from a string, we need to index the message. The first and last characters will be straight forward so let‚Äôs add those initially:</p>

<p><strong>string-info.py</strong></p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>#!/usr/bin/env python3.7

message = input("Enter a message: ")

print("First character:", message[0])
print("Last character:", message[-1])
</code></pre></div></div>

<p>Getting the middle character is a little more complicated. It will have the same number of characters before and after it. There is a character in the middle of a string if it has an odd length (eg: abc has b in the middle), but for an even length string, then the middle is really between two indexes (eg: abcd where the middle is between bc).</p>

<p>We can calculate the middle by dividing the length of the string by 2 and truncating it to get the index value. We can truncate the value by casting the result of the division back to being an integer. Here‚Äôs what our print function call looks like:</p>

<p><strong>string-info.py</strong></p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>#!/usr/bin/env python3.7

message = input("Enter a message: ")

print("First character:", message[0])
print("Last character:", message[-1])
print("Middle character:", message[int(len(message) / 2)])
Print the Even Index Characters and Odd Index Characters
</code></pre></div></div>

<p>To print the even index characters and the odd index characters, we‚Äôll need to use slicing with the step option. The only thing that we need to change between these two lines will be the starting index, as long as we step by 2. Here‚Äôs what it these lines look like:</p>

<p><strong>string-info.py</strong></p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>#!/usr/bin/env python3.7

message = input("Enter a message: ")

print("First character:", message[0])
print("Last character:", message[-1])
print("Middle character:", message[int(len(message) / 2)])
print("Even index characters:", message[0::2])
print("Odd index characters:", message[1::2])
Print the String in Reverse
</code></pre></div></div>

<p>Reversing a string can be done by getting a little creative with how slicing works. If we don‚Äôt provide a start or end index, and then set a -1 step value, then we‚Äôll reverse the string.</p>

<p><strong>string-info.py</strong></p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>#!/usr/bin/env python3.7

message = input("Enter a message: ")

print("First character:", message[0])
print("Last character:", message[-1])
print("Middle character:", message[int(len(message) / 2)])
print("Even index characters:", message[0::2])
print("Odd index characters:", message[1::2])
print
</code></pre></div></div>
:ET