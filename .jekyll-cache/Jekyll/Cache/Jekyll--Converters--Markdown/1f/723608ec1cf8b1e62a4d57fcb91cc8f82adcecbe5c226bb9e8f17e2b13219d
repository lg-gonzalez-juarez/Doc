I"§<h2 id="function-basics">Function Basics</h2>

<h3 id="defining-and-using-functions">Defining and Using Functions</h3>

<p>Being able to write code that we can call multiple times without repeating ourselves is one of the most powerful things that we can do when programming. Let‚Äôs learn how to define functions in Python.</p>

<h3 id="documentation-for-this-video">Documentation For This Video</h3>

<p><a href="https://docs.python.org/3/tutorial/controlflow.html#defining-functions">Defining Functions</a></p>

<h3 id="function-basics-1">Function Basics</h3>

<p>We can create functions in Python using the following:</p>

<ul>
  <li>The def keyword</li>
  <li>The function name - lowercase starting with a letter or underscore (_)</li>
  <li>Left parenthesis (()</li>
  <li>0 or more parameter names</li>
  <li>Right parenthesis ())</li>
  <li>A colon :</li>
  <li>An indented function body</li>
</ul>

<p>Here‚Äôs an example without any parameters:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&gt;&gt;&gt; def hello_world():
...     print("Hello, World!")
...
&gt;&gt;&gt; hello_world()
Hello, World!
&gt;&gt;&gt;
</code></pre></div></div>

<p>If we want to define a parameter, we will put the variable name we want it to have within the parentheses:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&gt;&gt;&gt; def print_name(name):
...     print(f"Name is {name}")
...
&gt;&gt;&gt; print_name("Keith")
Name is Keith
</code></pre></div></div>

<p>Let‚Äôs try to assign the value from print_name to a variable called output:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&gt;&gt;&gt; output = print_name("Keith")
Name is Keith
&gt;&gt;&gt; output
&gt;&gt;&gt;
</code></pre></div></div>

<p>Neither of these examples has a return value, but we will usually want to have a return value unless the function is our ‚Äúmain‚Äù function or carries out a ‚Äúside-effect‚Äù like printing. If we don‚Äôt explicitly declare a return value, then the result will be None (as you saw when our body used print).</p>

<p>We can declare what we‚Äôre returning from a function using the return keyword:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&gt;&gt;&gt; def add_two(num):
...     return num + 2
...
&gt;&gt;&gt; result = add_two(2)
&gt;&gt;&gt; result
4
</code></pre></div></div>
<h3 id="working-with-multiple-parameters">Working with Multiple Parameters</h3>

<p>When we have a function that takes multiple parameters, we need to separate them using commas and give them unique names:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&gt;&gt;&gt; def add(num1, num2):
...     return num1 + num2
...
&gt;&gt;&gt; result = add(1, 5)
&gt;&gt;&gt; result
6
</code></pre></div></div>

:ET