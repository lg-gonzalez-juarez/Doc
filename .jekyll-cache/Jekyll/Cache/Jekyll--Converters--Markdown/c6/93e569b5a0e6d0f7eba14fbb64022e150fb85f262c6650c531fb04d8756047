I"(s<h2 id="231-what-are-numpy-arrays">23.1. What are NumPy Arrays?</h2>

<p><a href="https://numpy.org/">NumPy</a> is a fundamental package for many math and science computations using Python. NumPy provides an array that can have N-dimensions. NumPy serves as the base for many packages that can extend its capabilities, such as, <code class="language-plaintext highlighter-rouge">pandas</code> and <code class="language-plaintext highlighter-rouge">scikit-learn</code>. It is a lean package focusing on operations on arrays. These other packages add functionality to it. However, it is a powerful package for many higher-level math operations.</p>

<h2 id="overview-of-numpy">Overview of NumPy</h2>

<h3 id="installing-and-using-numpy">Installing and Using NumPy</h3>

<p>Installing NumPy is as simple as using <code class="language-plaintext highlighter-rouge">pip install</code>:</p>

<div class="language-powershell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">python</span><span class="w"> </span><span class="nt">-m</span><span class="w"> </span><span class="nx">pip</span><span class="w"> </span><span class="nx">install</span><span class="w"> </span><span class="nx">numpy</span><span class="w">
</span></code></pre></div></div>

<p>Once the package is installed, it must be imported to use it. Enter into the REPL, by entering <code class="language-plaintext highlighter-rouge">python</code>. Once inside the REPL, standard practice is to import it as <code class="language-plaintext highlighter-rouge">np</code>:</p>

<div class="language-powershell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">import</span><span class="w"> </span><span class="nx">numpy</span><span class="w"> </span><span class="nx">as</span><span class="w"> </span><span class="nx">np</span><span class="w">
</span></code></pre></div></div>

<h3 id="arrays">Arrays</h3>

<p>NumPy operates on arrays. A 1-d array can be thought of as a Python list or as a column from a database. A multi-dimensional array can be thought of as many lists or columns in a database. While this is not exactly what the array is, it’s a useful way to imagine them. If you create arrays using the array module, all elements of the array must be of the same type.</p>

<h3 id="create-array">Create Array</h3>

<p>Let’s create an array that holds the first ten integers:</p>

<div class="language-powershell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="err">&gt;&gt;&gt;</span><span class="w"> </span><span class="n">import</span><span class="w"> </span><span class="nx">numpy</span><span class="w"> </span><span class="nx">as</span><span class="w"> </span><span class="nx">np</span><span class="w">
</span><span class="err">&gt;&gt;&gt;</span><span class="w"> </span><span class="n">simple_array</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">np.arange</span><span class="p">(</span><span class="mi">10</span><span class="p">)</span><span class="w">
</span><span class="err">&gt;&gt;&gt;</span><span class="w"> </span><span class="n">simple_array</span><span class="w">
</span><span class="nx">array</span><span class="p">([</span><span class="mi">0</span><span class="p">,</span><span class="w"> </span><span class="mi">1</span><span class="p">,</span><span class="w"> </span><span class="mi">2</span><span class="p">,</span><span class="w"> </span><span class="mi">3</span><span class="p">,</span><span class="w"> </span><span class="mi">4</span><span class="p">,</span><span class="w"> </span><span class="mi">5</span><span class="p">,</span><span class="w"> </span><span class="mi">6</span><span class="p">,</span><span class="w"> </span><span class="mi">7</span><span class="p">,</span><span class="w"> </span><span class="mi">8</span><span class="p">,</span><span class="w"> </span><span class="mi">9</span><span class="p">])</span><span class="w">
</span><span class="err">&gt;&gt;&gt;</span><span class="w">
</span></code></pre></div></div>

<p>We can also do the same thing, but instead of integers we’ll use floats by using <a href="https://numpy.org/doc/stable/user/basics.types.html">dtypes</a>:</p>

<div class="language-powershell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="err">&gt;&gt;&gt;</span><span class="w"> </span><span class="n">float_array</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">np.arange</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span><span class="w"> </span><span class="n">dtype</span><span class="o">=</span><span class="n">float</span><span class="p">)</span><span class="w">
</span><span class="err">&gt;&gt;&gt;</span><span class="w"> </span><span class="n">float_array</span><span class="w">
</span><span class="nx">array</span><span class="p">([</span><span class="mi">0</span><span class="o">.</span><span class="p">,</span><span class="w"> </span><span class="mi">1</span><span class="o">.</span><span class="p">,</span><span class="w"> </span><span class="mi">2</span><span class="o">.</span><span class="p">,</span><span class="w"> </span><span class="mi">3</span><span class="o">.</span><span class="p">,</span><span class="w"> </span><span class="mi">4</span><span class="o">.</span><span class="p">,</span><span class="w"> </span><span class="mi">5</span><span class="o">.</span><span class="p">,</span><span class="w"> </span><span class="mi">6</span><span class="o">.</span><span class="p">,</span><span class="w"> </span><span class="mi">7</span><span class="o">.</span><span class="p">,</span><span class="w"> </span><span class="mi">8</span><span class="o">.</span><span class="p">,</span><span class="w"> </span><span class="mi">9</span><span class="o">.</span><span class="p">])</span><span class="w">
</span><span class="err">&gt;&gt;&gt;</span><span class="w">
</span></code></pre></div></div>

<p>It is possible to change the type of the elements in an array using <code class="language-plaintext highlighter-rouge">astype</code>. Let’s convert our float array to complex numbers:</p>

<div class="language-powershell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="err">&gt;&gt;&gt;</span><span class="w"> </span><span class="n">complex_array</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">float_array.astype</span><span class="p">(</span><span class="n">complex</span><span class="p">)</span><span class="w">
</span><span class="err">&gt;&gt;&gt;</span><span class="w"> </span><span class="n">complex_array</span><span class="w">
</span><span class="nx">array</span><span class="p">([</span><span class="mi">0</span><span class="o">.+</span><span class="mi">0</span><span class="o">.</span><span class="nf">j</span><span class="p">,</span><span class="w"> </span><span class="mi">1</span><span class="o">.+</span><span class="mi">0</span><span class="o">.</span><span class="nf">j</span><span class="p">,</span><span class="w"> </span><span class="mi">2</span><span class="o">.+</span><span class="mi">0</span><span class="o">.</span><span class="nf">j</span><span class="p">,</span><span class="w"> </span><span class="mi">3</span><span class="o">.+</span><span class="mi">0</span><span class="o">.</span><span class="nf">j</span><span class="p">,</span><span class="w"> </span><span class="mi">4</span><span class="o">.+</span><span class="mi">0</span><span class="o">.</span><span class="nf">j</span><span class="p">,</span><span class="w"> </span><span class="mi">5</span><span class="o">.+</span><span class="mi">0</span><span class="o">.</span><span class="nf">j</span><span class="p">,</span><span class="w"> </span><span class="mi">6</span><span class="o">.+</span><span class="mi">0</span><span class="o">.</span><span class="nf">j</span><span class="p">,</span><span class="w"> </span><span class="mi">7</span><span class="o">.+</span><span class="mi">0</span><span class="o">.</span><span class="nf">j</span><span class="p">,</span><span class="w">
       </span><span class="mi">8</span><span class="o">.+</span><span class="mi">0</span><span class="o">.</span><span class="nf">j</span><span class="p">,</span><span class="w"> </span><span class="mi">9</span><span class="o">.+</span><span class="mi">0</span><span class="o">.</span><span class="nf">j</span><span class="p">])</span><span class="w">
</span><span class="err">&gt;&gt;&gt;</span><span class="w">
</span></code></pre></div></div>

<p>We can also create a NumPy array for a list or data file.</p>

<p>Let’s load <code class="language-plaintext highlighter-rouge">int_list</code> as an array named <code class="language-plaintext highlighter-rouge">example_array</code>:</p>

<div class="language-powershell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">int_list</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="p">[</span><span class="mi">1297</span><span class="p">,</span><span class="w"> </span><span class="mi">603</span><span class="p">,</span><span class="w"> </span><span class="mi">1071</span><span class="p">,</span><span class="w"> </span><span class="mi">539</span><span class="p">,</span><span class="w"> </span><span class="mi">1222</span><span class="p">,</span><span class="w"> </span><span class="mi">1424</span><span class="p">,</span><span class="w"> </span><span class="mi">986</span><span class="p">,</span><span class="w"> </span><span class="mi">397</span><span class="p">,</span><span class="w"> </span><span class="mi">970</span><span class="p">,</span><span class="w"> </span><span class="mi">1102</span><span class="p">,</span><span class="w"> </span><span class="mi">499</span><span class="p">,</span><span class="w"> </span><span class="mi">533</span><span class="p">,</span><span class="w"> </span><span class="mi">908</span><span class="p">,</span><span class="w"> </span><span class="mi">559</span><span class="p">,</span><span class="w"> </span><span class="mi">386</span><span class="p">,</span><span class="w"> </span><span class="mi">1183</span><span class="p">,</span><span class="w"> </span><span class="mi">595</span><span class="p">,</span><span class="w"> </span><span class="mi">69</span><span class="p">,</span><span class="w"> </span><span class="mi">1141</span><span class="p">,</span><span class="w"> </span><span class="mi">76</span><span class="p">,</span><span class="w"> </span><span class="mi">863</span><span class="p">,</span><span class="w"> </span><span class="mi">1343</span><span class="p">,</span><span class="w"> </span><span class="mi">185</span><span class="p">,</span><span class="w"> </span><span class="mi">895</span><span class="p">,</span><span class="w"> </span><span class="mi">1312</span><span class="p">,</span><span class="w"> </span><span class="mi">50</span><span class="p">,</span><span class="w"> </span><span class="mi">918</span><span class="p">,</span><span class="w"> </span><span class="mi">677</span><span class="p">,</span><span class="w"> </span><span class="mi">394</span><span class="p">,</span><span class="w"> </span><span class="mi">629</span><span class="p">,</span><span class="w"> </span><span class="mi">1317</span><span class="p">,</span><span class="w"> </span><span class="mi">944</span><span class="p">,</span><span class="w"> </span><span class="mi">466</span><span class="p">,</span><span class="w"> </span><span class="mi">751</span><span class="p">,</span><span class="w"> </span><span class="mi">1050</span><span class="p">,</span><span class="w"> </span><span class="mi">301</span><span class="p">,</span><span class="w"> </span><span class="mi">415</span><span class="p">,</span><span class="w"> </span><span class="mi">784</span><span class="p">,</span><span class="w"> </span><span class="mi">19</span><span class="p">,</span><span class="w"> </span><span class="mi">1395</span><span class="p">,</span><span class="w"> </span><span class="mi">1223</span><span class="p">,</span><span class="w"> </span><span class="mi">979</span><span class="p">,</span><span class="w"> </span><span class="mi">252</span><span class="p">,</span><span class="w"> </span><span class="mi">1155</span><span class="p">,</span><span class="w"> </span><span class="mi">59</span><span class="p">,</span><span class="w"> </span><span class="mi">107</span><span class="p">,</span><span class="w"> </span><span class="mi">632</span><span class="p">,</span><span class="w"> </span><span class="mi">995</span><span class="p">,</span><span class="w"> </span><span class="mi">972</span><span class="p">,</span><span class="w"> </span><span class="mi">867</span><span class="p">,</span><span class="w"> </span><span class="mi">332</span><span class="p">,</span><span class="w"> </span><span class="mi">751</span><span class="p">,</span><span class="w"> </span><span class="mi">810</span><span class="p">,</span><span class="w"> </span><span class="mi">50</span><span class="p">,</span><span class="w"> </span><span class="mi">55</span><span class="p">,</span><span class="w"> </span><span class="mi">218</span><span class="p">,</span><span class="w"> </span><span class="mi">997</span><span class="p">,</span><span class="w"> </span><span class="mi">1085</span><span class="p">,</span><span class="w"> </span><span class="mi">475</span><span class="p">,</span><span class="w"> </span><span class="mi">1494</span><span class="p">]</span><span class="w">
</span><span class="err">&gt;&gt;&gt;</span><span class="w"> </span><span class="n">int_list</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="p">[</span><span class="mi">1297</span><span class="p">,</span><span class="w"> </span><span class="mi">603</span><span class="p">,</span><span class="w"> </span><span class="mi">1071</span><span class="p">,</span><span class="w"> </span><span class="mi">539</span><span class="p">,</span><span class="w"> </span><span class="mi">1222</span><span class="p">,</span><span class="w"> </span><span class="mi">1424</span><span class="p">,</span><span class="w"> </span><span class="mi">986</span><span class="p">,</span><span class="w"> </span><span class="mi">397</span><span class="p">,</span><span class="w"> </span><span class="mi">970</span><span class="p">,</span><span class="w"> </span><span class="mi">1102</span><span class="p">,</span><span class="w"> </span><span class="mi">499</span><span class="p">,</span><span class="w"> </span><span class="mi">533</span><span class="p">,</span><span class="w"> </span><span class="mi">908</span><span class="p">,</span><span class="w"> </span><span class="mi">559</span><span class="p">,</span><span class="w"> </span><span class="mi">386</span><span class="p">,</span><span class="w"> </span><span class="mi">1183</span><span class="p">,</span><span class="w"> </span><span class="mi">595</span><span class="p">,</span><span class="w"> </span><span class="mi">69</span><span class="p">,</span><span class="w"> </span><span class="mi">1141</span><span class="p">,</span><span class="w"> </span><span class="mi">76</span><span class="p">,</span><span class="w"> </span><span class="mi">863</span><span class="p">,</span><span class="w"> </span><span class="mi">1343</span><span class="p">,</span><span class="w"> </span><span class="mi">185</span><span class="p">,</span><span class="w"> </span><span class="mi">895</span><span class="p">,</span><span class="w"> </span><span class="mi">1312</span><span class="p">,</span><span class="w"> </span><span class="mi">50</span><span class="p">,</span><span class="w"> </span><span class="mi">918</span><span class="p">,</span><span class="w"> </span><span class="mi">677</span><span class="p">,</span><span class="w"> </span><span class="mi">394</span><span class="p">,</span><span class="w"> </span><span class="mi">629</span><span class="p">,</span><span class="w"> </span><span class="mi">1317</span><span class="p">,</span><span class="w"> </span><span class="mi">944</span><span class="p">,</span><span class="w"> </span><span class="mi">466</span><span class="p">,</span><span class="w"> </span><span class="mi">751</span><span class="p">,</span><span class="w"> </span><span class="mi">1050</span><span class="p">,</span><span class="w"> </span><span class="mi">301</span><span class="p">,</span><span class="w"> </span><span class="mi">415</span><span class="p">,</span><span class="w"> </span><span class="mi">784</span><span class="p">,</span><span class="w"> </span><span class="mi">19</span><span class="p">,</span><span class="w"> </span><span class="mi">1395</span><span class="p">,</span><span class="w"> </span><span class="mi">1223</span><span class="p">,</span><span class="w"> </span><span class="mi">979</span><span class="p">,</span><span class="w"> </span><span class="mi">252</span><span class="p">,</span><span class="w"> </span><span class="mi">1155</span><span class="p">,</span><span class="w"> </span><span class="mi">59</span><span class="p">,</span><span class="w"> </span><span class="mi">107</span><span class="p">,</span><span class="w"> </span><span class="mi">632</span><span class="p">,</span><span class="w"> </span><span class="mi">995</span><span class="p">,</span><span class="w"> </span><span class="mi">972</span><span class="p">,</span><span class="w"> </span><span class="mi">867</span><span class="p">,</span><span class="w"> </span><span class="mi">332</span><span class="p">,</span><span class="w"> </span><span class="mi">751</span><span class="p">,</span><span class="w"> </span><span class="mi">810</span><span class="p">,</span><span class="w"> </span><span class="mi">50</span><span class="p">,</span><span class="w"> </span><span class="mi">55</span><span class="p">,</span><span class="w"> </span><span class="mi">218</span><span class="p">,</span><span class="w"> </span><span class="mi">997</span><span class="p">,</span><span class="w"> </span><span class="mi">1085</span><span class="p">,</span><span class="w"> </span><span class="mi">475</span><span class="p">,</span><span class="w"> </span><span class="mi">1494</span><span class="p">]</span><span class="w">
</span><span class="err">&gt;&gt;&gt;</span><span class="w"> </span><span class="n">int_array</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">np.array</span><span class="p">(</span><span class="n">int_list</span><span class="p">)</span><span class="w">
</span><span class="err">&gt;&gt;&gt;</span><span class="w"> </span><span class="n">int_array.dtype</span><span class="w">
</span><span class="nx">dtype</span><span class="p">(</span><span class="s1">'int64'</span><span class="p">)</span><span class="w">
</span><span class="err">&gt;&gt;&gt;</span><span class="w"> </span><span class="n">int_array</span><span class="w">
</span><span class="nx">array</span><span class="p">([</span><span class="mi">1297</span><span class="p">,</span><span class="w">  </span><span class="mi">603</span><span class="p">,</span><span class="w"> </span><span class="mi">1071</span><span class="p">,</span><span class="w">  </span><span class="mi">539</span><span class="p">,</span><span class="w"> </span><span class="mi">1222</span><span class="p">,</span><span class="w"> </span><span class="mi">1424</span><span class="p">,</span><span class="w">  </span><span class="mi">986</span><span class="p">,</span><span class="w">  </span><span class="mi">397</span><span class="p">,</span><span class="w">  </span><span class="mi">970</span><span class="p">,</span><span class="w"> </span><span class="mi">1102</span><span class="p">,</span><span class="w">  </span><span class="mi">499</span><span class="p">,</span><span class="w">
        </span><span class="mi">533</span><span class="p">,</span><span class="w">  </span><span class="mi">908</span><span class="p">,</span><span class="w">  </span><span class="mi">559</span><span class="p">,</span><span class="w">  </span><span class="mi">386</span><span class="p">,</span><span class="w"> </span><span class="mi">1183</span><span class="p">,</span><span class="w">  </span><span class="mi">595</span><span class="p">,</span><span class="w">   </span><span class="mi">69</span><span class="p">,</span><span class="w"> </span><span class="mi">1141</span><span class="p">,</span><span class="w">   </span><span class="mi">76</span><span class="p">,</span><span class="w">  </span><span class="mi">863</span><span class="p">,</span><span class="w"> </span><span class="mi">1343</span><span class="p">,</span><span class="w">
        </span><span class="mi">185</span><span class="p">,</span><span class="w">  </span><span class="mi">895</span><span class="p">,</span><span class="w"> </span><span class="mi">1312</span><span class="p">,</span><span class="w">   </span><span class="mi">50</span><span class="p">,</span><span class="w">  </span><span class="mi">918</span><span class="p">,</span><span class="w">  </span><span class="mi">677</span><span class="p">,</span><span class="w">  </span><span class="mi">394</span><span class="p">,</span><span class="w">  </span><span class="mi">629</span><span class="p">,</span><span class="w"> </span><span class="mi">1317</span><span class="p">,</span><span class="w">  </span><span class="mi">944</span><span class="p">,</span><span class="w">  </span><span class="mi">466</span><span class="p">,</span><span class="w">
        </span><span class="mi">751</span><span class="p">,</span><span class="w"> </span><span class="mi">1050</span><span class="p">,</span><span class="w">  </span><span class="mi">301</span><span class="p">,</span><span class="w">  </span><span class="mi">415</span><span class="p">,</span><span class="w">  </span><span class="mi">784</span><span class="p">,</span><span class="w">   </span><span class="mi">19</span><span class="p">,</span><span class="w"> </span><span class="mi">1395</span><span class="p">,</span><span class="w"> </span><span class="mi">1223</span><span class="p">,</span><span class="w">  </span><span class="mi">979</span><span class="p">,</span><span class="w">  </span><span class="mi">252</span><span class="p">,</span><span class="w"> </span><span class="mi">1155</span><span class="p">,</span><span class="w">
         </span><span class="mi">59</span><span class="p">,</span><span class="w">  </span><span class="mi">107</span><span class="p">,</span><span class="w">  </span><span class="mi">632</span><span class="p">,</span><span class="w">  </span><span class="mi">995</span><span class="p">,</span><span class="w">  </span><span class="mi">972</span><span class="p">,</span><span class="w">  </span><span class="mi">867</span><span class="p">,</span><span class="w">  </span><span class="mi">332</span><span class="p">,</span><span class="w">  </span><span class="mi">751</span><span class="p">,</span><span class="w">  </span><span class="mi">810</span><span class="p">,</span><span class="w">   </span><span class="mi">50</span><span class="p">,</span><span class="w">   </span><span class="mi">55</span><span class="p">,</span><span class="w">
        </span><span class="mi">218</span><span class="p">,</span><span class="w">  </span><span class="mi">997</span><span class="p">,</span><span class="w"> </span><span class="mi">1085</span><span class="p">,</span><span class="w">  </span><span class="mi">475</span><span class="p">,</span><span class="w"> </span><span class="mi">1494</span><span class="p">])</span><span class="w">
</span><span class="err">&gt;&gt;&gt;</span><span class="w">
</span></code></pre></div></div>

<p>Let’s load the same information from a file named <code class="language-plaintext highlighter-rouge">scores.csv</code>. We will use <code class="language-plaintext highlighter-rouge">np.genfromtxt</code> function to read the file and create an array out of its content. First, let’s download the <code class="language-plaintext highlighter-rouge">scores.csv</code> file we want to use:</p>

<div class="language-powershell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="err">$</span><span class="w"> </span><span class="n">curl</span><span class="w"> </span><span class="nt">-O</span><span class="w"> </span><span class="nx">https://raw.githubusercontent.com/linuxacademy/content-using-pythons-maths-science-and-engineering-libraries/master/scores.csv</span><span class="w"> 
</span><span class="err">&gt;&gt;&gt;</span><span class="w"> </span><span class="n">scores_array</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">np.genfromtxt</span><span class="p">(</span><span class="s1">'scores.csv'</span><span class="p">,</span><span class="w"> </span><span class="n">delimiter</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s1">','</span><span class="p">,</span><span class="w"> </span><span class="n">dtype</span><span class="o">=</span><span class="n">int</span><span class="p">)</span><span class="w">
</span><span class="err">&gt;&gt;&gt;</span><span class="w"> </span><span class="n">scores_array</span><span class="w">
</span><span class="nx">array</span><span class="p">([</span><span class="mi">1297</span><span class="p">,</span><span class="w">  </span><span class="mi">603</span><span class="p">,</span><span class="w"> </span><span class="mi">1071</span><span class="p">,</span><span class="w">  </span><span class="mi">539</span><span class="p">,</span><span class="w"> </span><span class="mi">1222</span><span class="p">,</span><span class="w"> </span><span class="mi">1424</span><span class="p">,</span><span class="w">  </span><span class="mi">986</span><span class="p">,</span><span class="w">  </span><span class="mi">397</span><span class="p">,</span><span class="w">  </span><span class="mi">970</span><span class="p">,</span><span class="w"> </span><span class="mi">1102</span><span class="p">,</span><span class="w">  </span><span class="mi">499</span><span class="p">,</span><span class="w">
        </span><span class="mi">533</span><span class="p">,</span><span class="w">  </span><span class="mi">908</span><span class="p">,</span><span class="w">  </span><span class="mi">559</span><span class="p">,</span><span class="w">  </span><span class="mi">386</span><span class="p">,</span><span class="w"> </span><span class="mi">1183</span><span class="p">,</span><span class="w">  </span><span class="mi">595</span><span class="p">,</span><span class="w">   </span><span class="mi">69</span><span class="p">,</span><span class="w"> </span><span class="mi">1141</span><span class="p">,</span><span class="w">   </span><span class="mi">76</span><span class="p">,</span><span class="w">  </span><span class="mi">863</span><span class="p">,</span><span class="w"> </span><span class="mi">1343</span><span class="p">,</span><span class="w">
        </span><span class="mi">185</span><span class="p">,</span><span class="w">  </span><span class="mi">895</span><span class="p">,</span><span class="w"> </span><span class="mi">1312</span><span class="p">,</span><span class="w">   </span><span class="mi">50</span><span class="p">,</span><span class="w">  </span><span class="mi">918</span><span class="p">,</span><span class="w">  </span><span class="mi">677</span><span class="p">,</span><span class="w">  </span><span class="mi">394</span><span class="p">,</span><span class="w">  </span><span class="mi">629</span><span class="p">,</span><span class="w"> </span><span class="mi">1317</span><span class="p">,</span><span class="w">  </span><span class="mi">944</span><span class="p">,</span><span class="w">  </span><span class="mi">466</span><span class="p">,</span><span class="w">
        </span><span class="mi">751</span><span class="p">,</span><span class="w"> </span><span class="mi">1050</span><span class="p">,</span><span class="w">  </span><span class="mi">301</span><span class="p">,</span><span class="w">  </span><span class="mi">415</span><span class="p">,</span><span class="w">  </span><span class="mi">784</span><span class="p">,</span><span class="w">   </span><span class="mi">19</span><span class="p">,</span><span class="w"> </span><span class="mi">1395</span><span class="p">,</span><span class="w"> </span><span class="mi">1223</span><span class="p">,</span><span class="w">  </span><span class="mi">979</span><span class="p">,</span><span class="w">  </span><span class="mi">252</span><span class="p">,</span><span class="w"> </span><span class="mi">1155</span><span class="p">,</span><span class="w">
         </span><span class="mi">59</span><span class="p">,</span><span class="w">  </span><span class="mi">107</span><span class="p">,</span><span class="w">  </span><span class="mi">632</span><span class="p">,</span><span class="w">  </span><span class="mi">995</span><span class="p">,</span><span class="w">  </span><span class="mi">972</span><span class="p">,</span><span class="w">  </span><span class="mi">867</span><span class="p">,</span><span class="w">  </span><span class="mi">332</span><span class="p">,</span><span class="w">  </span><span class="mi">751</span><span class="p">,</span><span class="w">  </span><span class="mi">810</span><span class="p">,</span><span class="w">   </span><span class="mi">50</span><span class="p">,</span><span class="w">   </span><span class="mi">55</span><span class="p">,</span><span class="w">
        </span><span class="mi">218</span><span class="p">,</span><span class="w">  </span><span class="mi">997</span><span class="p">,</span><span class="w"> </span><span class="mi">1085</span><span class="p">,</span><span class="w">  </span><span class="mi">475</span><span class="p">,</span><span class="w"> </span><span class="mi">1494</span><span class="p">])</span><span class="w">
</span><span class="err">&gt;&gt;&gt;</span><span class="w">
</span></code></pre></div></div>

<h3 id="index-and-slice-an-array">Index and Slice an Array</h3>

<p>Slicing an array in NumPy looks like slicing a list in Python.</p>

<p>From <code class="language-plaintext highlighter-rouge">scores_array</code>, let’s count the elements by using <code class="language-plaintext highlighter-rouge">.size</code>:</p>

<div class="language-powershell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="err">&gt;&gt;&gt;</span><span class="w"> </span><span class="n">scores_array.size</span><span class="w">
</span><span class="nx">60</span><span class="w">
</span><span class="err">&gt;&gt;&gt;</span><span class="w">
</span></code></pre></div></div>

<p>Let’s make an array with the 2nd, 3rd, and 4th element of <code class="language-plaintext highlighter-rouge">scores_array</code>. It should be equal to [1071, 539, 1222]:</p>

<div class="language-powershell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="err">&gt;&gt;&gt;</span><span class="w"> </span><span class="n">scores_array</span><span class="p">[</span><span class="mi">2</span><span class="p">:</span><span class="mi">5</span><span class="p">]</span><span class="w">
</span><span class="n">array</span><span class="p">([</span><span class="mi">1071</span><span class="p">,</span><span class="w">  </span><span class="mi">539</span><span class="p">,</span><span class="w"> </span><span class="mi">1222</span><span class="p">])</span><span class="w">
</span><span class="err">&gt;&gt;&gt;</span><span class="w">
</span></code></pre></div></div>

<p>As you can see, the indexing and slicing works the same here as it does in basic Python.</p>

<h3 id="basic-operations-on-numpy-arrays">Basic Operations on NumPy Arrays</h3>

<p>Information on these operations can be found here.</p>

<h3 id="printing">Printing</h3>

<p>Printing an array is as simple as using <code class="language-plaintext highlighter-rouge">print</code>:</p>

<div class="language-powershell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="err">&gt;&gt;&gt;</span><span class="w"> </span><span class="n">print</span><span class="p">(</span><span class="n">scores_array</span><span class="p">)</span><span class="w">
</span><span class="p">[</span><span class="mi">1297</span><span class="w">  </span><span class="mi">603</span><span class="w"> </span><span class="mi">1071</span><span class="w">  </span><span class="mi">539</span><span class="w"> </span><span class="mi">1222</span><span class="w"> </span><span class="mi">1424</span><span class="w">  </span><span class="mi">986</span><span class="w">  </span><span class="mi">397</span><span class="w">  </span><span class="mi">970</span><span class="w"> </span><span class="mi">1102</span><span class="w">  </span><span class="mi">499</span><span class="w">  </span><span class="mi">533</span><span class="w">  </span><span class="mi">908</span><span class="w">  </span><span class="mi">559</span><span class="w">
  </span><span class="mi">386</span><span class="w"> </span><span class="mi">1183</span><span class="w">  </span><span class="mi">595</span><span class="w">   </span><span class="mi">69</span><span class="w"> </span><span class="mi">1141</span><span class="w">   </span><span class="mi">76</span><span class="w">  </span><span class="mi">863</span><span class="w"> </span><span class="mi">1343</span><span class="w">  </span><span class="mi">185</span><span class="w">  </span><span class="mi">895</span><span class="w"> </span><span class="mi">1312</span><span class="w">   </span><span class="mi">50</span><span class="w">  </span><span class="mi">918</span><span class="w">  </span><span class="mi">677</span><span class="w">
  </span><span class="mi">394</span><span class="w">  </span><span class="mi">629</span><span class="w"> </span><span class="mi">1317</span><span class="w">  </span><span class="mi">944</span><span class="w">  </span><span class="mi">466</span><span class="w">  </span><span class="mi">751</span><span class="w"> </span><span class="mi">1050</span><span class="w">  </span><span class="mi">301</span><span class="w">  </span><span class="mi">415</span><span class="w">  </span><span class="mi">784</span><span class="w">   </span><span class="mi">19</span><span class="w"> </span><span class="mi">1395</span><span class="w"> </span><span class="mi">1223</span><span class="w">  </span><span class="mi">979</span><span class="w">
  </span><span class="mi">252</span><span class="w"> </span><span class="mi">1155</span><span class="w">   </span><span class="mi">59</span><span class="w">  </span><span class="mi">107</span><span class="w">  </span><span class="mi">632</span><span class="w">  </span><span class="mi">995</span><span class="w">  </span><span class="mi">972</span><span class="w">  </span><span class="mi">867</span><span class="w">  </span><span class="mi">332</span><span class="w">  </span><span class="mi">751</span><span class="w">  </span><span class="mi">810</span><span class="w">   </span><span class="mi">50</span><span class="w">   </span><span class="mi">55</span><span class="w">  </span><span class="mi">218</span><span class="w">
  </span><span class="mi">997</span><span class="w"> </span><span class="mi">1085</span><span class="w">  </span><span class="mi">475</span><span class="w"> </span><span class="mi">1494</span><span class="p">]</span><span class="w">
</span><span class="err">&gt;&gt;&gt;</span><span class="w">
</span></code></pre></div></div>

<p>Note this array doesn’t possess commas as the <code class="language-plaintext highlighter-rouge">genfromtxt()</code> does.</p>

<h3 id="simple-math-operations">Simple Math Operations</h3>

<p>In NumPy, math operations are elementwise. That is, NumPy applies the math operand to the zeroth element of each array, and that is the zeroth element of a new array. It does this for each element in the arrays. You can perform all basic math operands on these arrays.</p>

<p>Let’s raise each element in the scores_array to the zero power:</p>

<div class="language-powershell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="err">&gt;&gt;&gt;</span><span class="w"> </span><span class="n">scores_array</span><span class="w"> </span><span class="o">**</span><span class="w"> </span><span class="nx">0</span><span class="w">
</span><span class="n">array</span><span class="p">([</span><span class="mi">1</span><span class="p">,</span><span class="w"> </span><span class="mi">1</span><span class="p">,</span><span class="w"> </span><span class="mi">1</span><span class="p">,</span><span class="w"> </span><span class="mi">1</span><span class="p">,</span><span class="w"> </span><span class="mi">1</span><span class="p">,</span><span class="w"> </span><span class="mi">1</span><span class="p">,</span><span class="w"> </span><span class="mi">1</span><span class="p">,</span><span class="w"> </span><span class="mi">1</span><span class="p">,</span><span class="w"> </span><span class="mi">1</span><span class="p">,</span><span class="w"> </span><span class="mi">1</span><span class="p">,</span><span class="w"> </span><span class="mi">1</span><span class="p">,</span><span class="w"> </span><span class="mi">1</span><span class="p">,</span><span class="w"> </span><span class="mi">1</span><span class="p">,</span><span class="w"> </span><span class="mi">1</span><span class="p">,</span><span class="w"> </span><span class="mi">1</span><span class="p">,</span><span class="w"> </span><span class="mi">1</span><span class="p">,</span><span class="w"> </span><span class="mi">1</span><span class="p">,</span><span class="w"> </span><span class="mi">1</span><span class="p">,</span><span class="w"> </span><span class="mi">1</span><span class="p">,</span><span class="w"> </span><span class="mi">1</span><span class="p">,</span><span class="w"> </span><span class="mi">1</span><span class="p">,</span><span class="w"> </span><span class="mi">1</span><span class="p">,</span><span class="w">
       </span><span class="mi">1</span><span class="p">,</span><span class="w"> </span><span class="mi">1</span><span class="p">,</span><span class="w"> </span><span class="mi">1</span><span class="p">,</span><span class="w"> </span><span class="mi">1</span><span class="p">,</span><span class="w"> </span><span class="mi">1</span><span class="p">,</span><span class="w"> </span><span class="mi">1</span><span class="p">,</span><span class="w"> </span><span class="mi">1</span><span class="p">,</span><span class="w"> </span><span class="mi">1</span><span class="p">,</span><span class="w"> </span><span class="mi">1</span><span class="p">,</span><span class="w"> </span><span class="mi">1</span><span class="p">,</span><span class="w"> </span><span class="mi">1</span><span class="p">,</span><span class="w"> </span><span class="mi">1</span><span class="p">,</span><span class="w"> </span><span class="mi">1</span><span class="p">,</span><span class="w"> </span><span class="mi">1</span><span class="p">,</span><span class="w"> </span><span class="mi">1</span><span class="p">,</span><span class="w"> </span><span class="mi">1</span><span class="p">,</span><span class="w"> </span><span class="mi">1</span><span class="p">,</span><span class="w"> </span><span class="mi">1</span><span class="p">,</span><span class="w"> </span><span class="mi">1</span><span class="p">,</span><span class="w"> </span><span class="mi">1</span><span class="p">,</span><span class="w"> </span><span class="mi">1</span><span class="p">,</span><span class="w"> </span><span class="mi">1</span><span class="p">,</span><span class="w">
       </span><span class="mi">1</span><span class="p">,</span><span class="w"> </span><span class="mi">1</span><span class="p">,</span><span class="w"> </span><span class="mi">1</span><span class="p">,</span><span class="w"> </span><span class="mi">1</span><span class="p">,</span><span class="w"> </span><span class="mi">1</span><span class="p">,</span><span class="w"> </span><span class="mi">1</span><span class="p">,</span><span class="w"> </span><span class="mi">1</span><span class="p">,</span><span class="w"> </span><span class="mi">1</span><span class="p">,</span><span class="w"> </span><span class="mi">1</span><span class="p">,</span><span class="w"> </span><span class="mi">1</span><span class="p">,</span><span class="w"> </span><span class="mi">1</span><span class="p">,</span><span class="w"> </span><span class="mi">1</span><span class="p">,</span><span class="w"> </span><span class="mi">1</span><span class="p">,</span><span class="w"> </span><span class="mi">1</span><span class="p">,</span><span class="w"> </span><span class="mi">1</span><span class="p">,</span><span class="w"> </span><span class="mi">1</span><span class="p">])</span><span class="w">
</span><span class="err">&gt;&gt;&gt;</span><span class="w"> </span><span class="n">scores_array</span><span class="w">
</span><span class="nx">array</span><span class="p">([</span><span class="mi">1297</span><span class="p">,</span><span class="w">  </span><span class="mi">603</span><span class="p">,</span><span class="w"> </span><span class="mi">1071</span><span class="p">,</span><span class="w">  </span><span class="mi">539</span><span class="p">,</span><span class="w"> </span><span class="mi">1222</span><span class="p">,</span><span class="w"> </span><span class="mi">1424</span><span class="p">,</span><span class="w">  </span><span class="mi">986</span><span class="p">,</span><span class="w">  </span><span class="mi">397</span><span class="p">,</span><span class="w">  </span><span class="mi">970</span><span class="p">,</span><span class="w"> </span><span class="mi">1102</span><span class="p">,</span><span class="w">  </span><span class="mi">499</span><span class="p">,</span><span class="w">
        </span><span class="mi">533</span><span class="p">,</span><span class="w">  </span><span class="mi">908</span><span class="p">,</span><span class="w">  </span><span class="mi">559</span><span class="p">,</span><span class="w">  </span><span class="mi">386</span><span class="p">,</span><span class="w"> </span><span class="mi">1183</span><span class="p">,</span><span class="w">  </span><span class="mi">595</span><span class="p">,</span><span class="w">   </span><span class="mi">69</span><span class="p">,</span><span class="w"> </span><span class="mi">1141</span><span class="p">,</span><span class="w">   </span><span class="mi">76</span><span class="p">,</span><span class="w">  </span><span class="mi">863</span><span class="p">,</span><span class="w"> </span><span class="mi">1343</span><span class="p">,</span><span class="w">
        </span><span class="mi">185</span><span class="p">,</span><span class="w">  </span><span class="mi">895</span><span class="p">,</span><span class="w"> </span><span class="mi">1312</span><span class="p">,</span><span class="w">   </span><span class="mi">50</span><span class="p">,</span><span class="w">  </span><span class="mi">918</span><span class="p">,</span><span class="w">  </span><span class="mi">677</span><span class="p">,</span><span class="w">  </span><span class="mi">394</span><span class="p">,</span><span class="w">  </span><span class="mi">629</span><span class="p">,</span><span class="w"> </span><span class="mi">1317</span><span class="p">,</span><span class="w">  </span><span class="mi">944</span><span class="p">,</span><span class="w">  </span><span class="mi">466</span><span class="p">,</span><span class="w">
        </span><span class="mi">751</span><span class="p">,</span><span class="w"> </span><span class="mi">1050</span><span class="p">,</span><span class="w">  </span><span class="mi">301</span><span class="p">,</span><span class="w">  </span><span class="mi">415</span><span class="p">,</span><span class="w">  </span><span class="mi">784</span><span class="p">,</span><span class="w">   </span><span class="mi">19</span><span class="p">,</span><span class="w"> </span><span class="mi">1395</span><span class="p">,</span><span class="w"> </span><span class="mi">1223</span><span class="p">,</span><span class="w">  </span><span class="mi">979</span><span class="p">,</span><span class="w">  </span><span class="mi">252</span><span class="p">,</span><span class="w"> </span><span class="mi">1155</span><span class="p">,</span><span class="w">
         </span><span class="mi">59</span><span class="p">,</span><span class="w">  </span><span class="mi">107</span><span class="p">,</span><span class="w">  </span><span class="mi">632</span><span class="p">,</span><span class="w">  </span><span class="mi">995</span><span class="p">,</span><span class="w">  </span><span class="mi">972</span><span class="p">,</span><span class="w">  </span><span class="mi">867</span><span class="p">,</span><span class="w">  </span><span class="mi">332</span><span class="p">,</span><span class="w">  </span><span class="mi">751</span><span class="p">,</span><span class="w">  </span><span class="mi">810</span><span class="p">,</span><span class="w">   </span><span class="mi">50</span><span class="p">,</span><span class="w">   </span><span class="mi">55</span><span class="p">,</span><span class="w">
        </span><span class="mi">218</span><span class="p">,</span><span class="w">  </span><span class="mi">997</span><span class="p">,</span><span class="w"> </span><span class="mi">1085</span><span class="p">,</span><span class="w">  </span><span class="mi">475</span><span class="p">,</span><span class="w"> </span><span class="mi">1494</span><span class="p">])</span><span class="w">
</span><span class="err">&gt;&gt;&gt;</span><span class="w">
</span></code></pre></div></div>

<p>As you can see, the resulting array is an array of 1’s. Remember: Raising a number to the exponent 0 results in 1.
You can also see that this created a new array and did not affect the original array.</p>

<h3 id="what-did-we-learn">What Did We Learn?</h3>

<p>In this lesson, we looked at NumPy arrays. We learned to create them by various means, including reading a CSV file. We learned how to change the type stored in the array and how to index and slice. Finally, we discussed basic operations on arrays, such as printing and simple math. For more information on <a href="https://numpy.org/devdocs/user/quickstart.html">NumPy arrays</a>, take a look at the official documentation.</p>

<h2 id="232-reshaping-a-numpy-array-into-a-matrix">23.2 Reshaping a Numpy Array Into a Matrix</h2>

<p><a href="https://numpy.org/">NumPy</a> has a matrix function, but the documentation indicates that this function is being deprecated, and using multi-dimension arrays is strongly suggested instead. We will be doing just that in this lesson: creating multi-dimension arrays that are matrices.</p>

<p>Arrays, or vectors, are one-dimensional. That is, they have a single column of items. A matrix is a rectangular arrangement of n rows and m columns, where n and m are greater than one. (For example: A 1 by 5 matrix is an array.)</p>

<p>Vectors (arrays) and matrices are essential to many science, math, and engineering operations. With these, we are reminded of linear algebra.</p>

<p>Note: If you have never used NumPy before, we strongly suggest you see the first lesson in this section, “What are NumPy Arrays?”.</p>

<h2 id="matrices">Matrices</h2>

<h3 id="create-a-matrix-from-a-single-array">Create a Matrix From a Single Array</h3>

<p>A matrix can be formed from a single array by re-arranging it. From the last lesson, we looked at int_list as an array. Remember to import NumPy.</p>

<div class="language-powershell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="err">&gt;&gt;&gt;</span><span class="w"> </span><span class="n">import</span><span class="w"> </span><span class="nx">numpy</span><span class="w"> </span><span class="nx">as</span><span class="w"> </span><span class="nx">np</span><span class="w">
</span><span class="err">&gt;&gt;&gt;</span><span class="w"> </span><span class="n">int_list</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="p">[</span><span class="mi">1297</span><span class="p">,</span><span class="w"> </span><span class="mi">603</span><span class="p">,</span><span class="w"> </span><span class="mi">1071</span><span class="p">,</span><span class="w"> </span><span class="mi">539</span><span class="p">,</span><span class="w"> </span><span class="mi">1222</span><span class="p">,</span><span class="w"> </span><span class="mi">1424</span><span class="p">,</span><span class="w"> </span><span class="mi">986</span><span class="p">,</span><span class="w"> </span><span class="mi">397</span><span class="p">,</span><span class="w"> </span><span class="mi">970</span><span class="p">,</span><span class="w"> </span><span class="mi">1102</span><span class="p">,</span><span class="w"> </span><span class="mi">499</span><span class="p">,</span><span class="w"> </span><span class="mi">533</span><span class="p">,</span><span class="w"> </span><span class="mi">908</span><span class="p">,</span><span class="w"> </span><span class="mi">559</span><span class="p">,</span><span class="w"> </span><span class="mi">386</span><span class="p">,</span><span class="w"> </span><span class="mi">1183</span><span class="p">,</span><span class="w"> </span><span class="mi">595</span><span class="p">,</span><span class="w"> </span><span class="mi">69</span><span class="p">,</span><span class="w"> </span><span class="mi">1141</span><span class="p">,</span><span class="w"> </span><span class="mi">76</span><span class="p">,</span><span class="w"> </span><span class="mi">863</span><span class="p">,</span><span class="w"> </span><span class="mi">1343</span><span class="p">,</span><span class="w"> </span><span class="mi">185</span><span class="p">,</span><span class="w"> </span><span class="mi">895</span><span class="p">,</span><span class="w"> </span><span class="mi">1312</span><span class="p">,</span><span class="w"> </span><span class="mi">50</span><span class="p">,</span><span class="w"> </span><span class="mi">918</span><span class="p">,</span><span class="w"> </span><span class="mi">677</span><span class="p">,</span><span class="w"> </span><span class="mi">394</span><span class="p">,</span><span class="w"> </span><span class="mi">629</span><span class="p">,</span><span class="w"> </span><span class="mi">1317</span><span class="p">,</span><span class="w"> </span><span class="mi">944</span><span class="p">,</span><span class="w"> </span><span class="mi">466</span><span class="p">,</span><span class="w"> </span><span class="mi">751</span><span class="p">,</span><span class="w"> </span><span class="mi">1050</span><span class="p">,</span><span class="w"> </span><span class="mi">301</span><span class="p">,</span><span class="w"> </span><span class="mi">415</span><span class="p">,</span><span class="w"> </span><span class="mi">784</span><span class="p">,</span><span class="w"> </span><span class="mi">19</span><span class="p">,</span><span class="w"> </span><span class="mi">1395</span><span class="p">,</span><span class="w"> </span><span class="mi">1223</span><span class="p">,</span><span class="w"> </span><span class="mi">979</span><span class="p">,</span><span class="w"> </span><span class="mi">252</span><span class="p">,</span><span class="w"> </span><span class="mi">1155</span><span class="p">,</span><span class="w"> </span><span class="mi">59</span><span class="p">,</span><span class="w"> </span><span class="mi">107</span><span class="p">,</span><span class="w"> </span><span class="mi">632</span><span class="p">,</span><span class="w"> </span><span class="mi">995</span><span class="p">,</span><span class="w"> </span><span class="mi">972</span><span class="p">,</span><span class="w"> </span><span class="mi">867</span><span class="p">,</span><span class="w"> </span><span class="mi">332</span><span class="p">,</span><span class="w"> </span><span class="mi">751</span><span class="p">,</span><span class="w"> </span><span class="mi">810</span><span class="p">,</span><span class="w"> </span><span class="mi">50</span><span class="p">,</span><span class="w"> </span><span class="mi">55</span><span class="p">,</span><span class="w"> </span><span class="mi">218</span><span class="p">,</span><span class="w"> </span><span class="mi">997</span><span class="p">,</span><span class="w"> </span><span class="mi">1085</span><span class="p">,</span><span class="w"> </span><span class="mi">475</span><span class="p">,</span><span class="w"> </span><span class="mi">1494</span><span class="p">]</span><span class="w">
</span><span class="err">&gt;&gt;&gt;</span><span class="w"> </span><span class="n">int_array</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">np.array</span><span class="p">(</span><span class="n">int_list</span><span class="p">)</span><span class="w">
</span><span class="err">&gt;&gt;&gt;</span><span class="w"> </span><span class="n">print</span><span class="p">(</span><span class="n">int_array</span><span class="p">)</span><span class="w">
</span><span class="p">[</span><span class="mi">1297</span><span class="w">  </span><span class="mi">603</span><span class="w"> </span><span class="mi">1071</span><span class="w">  </span><span class="mi">539</span><span class="w"> </span><span class="mi">1222</span><span class="w"> </span><span class="mi">1424</span><span class="w">  </span><span class="mi">986</span><span class="w">  </span><span class="mi">397</span><span class="w">  </span><span class="mi">970</span><span class="w"> </span><span class="mi">1102</span><span class="w">  </span><span class="mi">499</span><span class="w">  </span><span class="mi">533</span><span class="w">  </span><span class="mi">908</span><span class="w">  </span><span class="mi">559</span><span class="w">
  </span><span class="mi">386</span><span class="w"> </span><span class="mi">1183</span><span class="w">  </span><span class="mi">595</span><span class="w">   </span><span class="mi">69</span><span class="w"> </span><span class="mi">1141</span><span class="w">   </span><span class="mi">76</span><span class="w">  </span><span class="mi">863</span><span class="w"> </span><span class="mi">1343</span><span class="w">  </span><span class="mi">185</span><span class="w">  </span><span class="mi">895</span><span class="w"> </span><span class="mi">1312</span><span class="w">   </span><span class="mi">50</span><span class="w">  </span><span class="mi">918</span><span class="w">  </span><span class="mi">677</span><span class="w">
  </span><span class="mi">394</span><span class="w">  </span><span class="mi">629</span><span class="w"> </span><span class="mi">1317</span><span class="w">  </span><span class="mi">944</span><span class="w">  </span><span class="mi">466</span><span class="w">  </span><span class="mi">751</span><span class="w"> </span><span class="mi">1050</span><span class="w">  </span><span class="mi">301</span><span class="w">  </span><span class="mi">415</span><span class="w">  </span><span class="mi">784</span><span class="w">   </span><span class="mi">19</span><span class="w"> </span><span class="mi">1395</span><span class="w"> </span><span class="mi">1223</span><span class="w">  </span><span class="mi">979</span><span class="w">
  </span><span class="mi">252</span><span class="w"> </span><span class="mi">1155</span><span class="w">   </span><span class="mi">59</span><span class="w">  </span><span class="mi">107</span><span class="w">  </span><span class="mi">632</span><span class="w">  </span><span class="mi">995</span><span class="w">  </span><span class="mi">972</span><span class="w">  </span><span class="mi">867</span><span class="w">  </span><span class="mi">332</span><span class="w">  </span><span class="mi">751</span><span class="w">  </span><span class="mi">810</span><span class="w">   </span><span class="mi">50</span><span class="w">   </span><span class="mi">55</span><span class="w">  </span><span class="mi">218</span><span class="w">
  </span><span class="mi">997</span><span class="w"> </span><span class="mi">1085</span><span class="w">  </span><span class="mi">475</span><span class="w"> </span><span class="mi">1494</span><span class="p">]</span><span class="w">
</span></code></pre></div></div>

<p><code class="language-plaintext highlighter-rouge">shape</code> is a tuple that gives dimensions of the array.</p>

<div class="language-powershell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="err">&gt;&gt;&gt;</span><span class="w"> </span><span class="n">int_array.shape</span><span class="w">
</span><span class="p">(</span><span class="mi">60</span><span class="p">,)</span><span class="w">
</span></code></pre></div></div>

<p>Let’s <a href="https://numpy.org/doc/1.18/reference/generated/numpy.reshape.html">reshape</a> the <code class="language-plaintext highlighter-rouge">int_array</code> into a 10 x 6 matrix:</p>

<div class="language-powershell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="err">&gt;&gt;&gt;</span><span class="w"> </span><span class="n">int_matrix</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">int_array.reshape</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span><span class="w"> </span><span class="mi">6</span><span class="p">)</span><span class="w">
</span><span class="err">&gt;&gt;&gt;</span><span class="w"> </span><span class="n">print</span><span class="p">(</span><span class="n">int_matrix</span><span class="p">)</span><span class="w">
</span><span class="p">[[</span><span class="mi">1297</span><span class="w">  </span><span class="mi">603</span><span class="w"> </span><span class="mi">1071</span><span class="w">  </span><span class="mi">539</span><span class="w"> </span><span class="mi">1222</span><span class="w"> </span><span class="mi">1424</span><span class="p">]</span><span class="w">
 </span><span class="p">[</span><span class="w"> </span><span class="mi">986</span><span class="w">  </span><span class="mi">397</span><span class="w">  </span><span class="mi">970</span><span class="w"> </span><span class="mi">1102</span><span class="w">  </span><span class="mi">499</span><span class="w">  </span><span class="mi">533</span><span class="p">]</span><span class="w">
 </span><span class="p">[</span><span class="w"> </span><span class="mi">908</span><span class="w">  </span><span class="mi">559</span><span class="w">  </span><span class="mi">386</span><span class="w"> </span><span class="mi">1183</span><span class="w">  </span><span class="mi">595</span><span class="w">   </span><span class="mi">69</span><span class="p">]</span><span class="w">
 </span><span class="p">[</span><span class="mi">1141</span><span class="w">   </span><span class="mi">76</span><span class="w">  </span><span class="mi">863</span><span class="w"> </span><span class="mi">1343</span><span class="w">  </span><span class="mi">185</span><span class="w">  </span><span class="mi">895</span><span class="p">]</span><span class="w">
 </span><span class="p">[</span><span class="mi">1312</span><span class="w">   </span><span class="mi">50</span><span class="w">  </span><span class="mi">918</span><span class="w">  </span><span class="mi">677</span><span class="w">  </span><span class="mi">394</span><span class="w">  </span><span class="mi">629</span><span class="p">]</span><span class="w">
 </span><span class="p">[</span><span class="mi">1317</span><span class="w">  </span><span class="mi">944</span><span class="w">  </span><span class="mi">466</span><span class="w">  </span><span class="mi">751</span><span class="w"> </span><span class="mi">1050</span><span class="w">  </span><span class="mi">301</span><span class="p">]</span><span class="w">
 </span><span class="p">[</span><span class="w"> </span><span class="mi">415</span><span class="w">  </span><span class="mi">784</span><span class="w">   </span><span class="mi">19</span><span class="w"> </span><span class="mi">1395</span><span class="w"> </span><span class="mi">1223</span><span class="w">  </span><span class="mi">979</span><span class="p">]</span><span class="w">
 </span><span class="p">[</span><span class="w"> </span><span class="mi">252</span><span class="w"> </span><span class="mi">1155</span><span class="w">   </span><span class="mi">59</span><span class="w">  </span><span class="mi">107</span><span class="w">  </span><span class="mi">632</span><span class="w">  </span><span class="mi">995</span><span class="p">]</span><span class="w">
 </span><span class="p">[</span><span class="w"> </span><span class="mi">972</span><span class="w">  </span><span class="mi">867</span><span class="w">  </span><span class="mi">332</span><span class="w">  </span><span class="mi">751</span><span class="w">  </span><span class="mi">810</span><span class="w">   </span><span class="mi">50</span><span class="p">]</span><span class="w">
 </span><span class="p">[</span><span class="w">  </span><span class="mi">55</span><span class="w">  </span><span class="mi">218</span><span class="w">  </span><span class="mi">997</span><span class="w"> </span><span class="mi">1085</span><span class="w">  </span><span class="mi">475</span><span class="w"> </span><span class="mi">1494</span><span class="p">]]</span><span class="w">
 </span><span class="err">&gt;&gt;&gt;</span><span class="w"> </span><span class="n">int_matrix</span><span class="w">
</span><span class="nx">array</span><span class="p">([[</span><span class="mi">1297</span><span class="p">,</span><span class="w">  </span><span class="mi">603</span><span class="p">,</span><span class="w"> </span><span class="mi">1071</span><span class="p">,</span><span class="w">  </span><span class="mi">539</span><span class="p">,</span><span class="w"> </span><span class="mi">1222</span><span class="p">,</span><span class="w"> </span><span class="mi">1424</span><span class="p">],</span><span class="w">
       </span><span class="p">[</span><span class="w"> </span><span class="mi">986</span><span class="p">,</span><span class="w">  </span><span class="mi">397</span><span class="p">,</span><span class="w">  </span><span class="mi">970</span><span class="p">,</span><span class="w"> </span><span class="mi">1102</span><span class="p">,</span><span class="w">  </span><span class="mi">499</span><span class="p">,</span><span class="w">  </span><span class="mi">533</span><span class="p">],</span><span class="w">
       </span><span class="p">[</span><span class="w"> </span><span class="mi">908</span><span class="p">,</span><span class="w">  </span><span class="mi">559</span><span class="p">,</span><span class="w">  </span><span class="mi">386</span><span class="p">,</span><span class="w"> </span><span class="mi">1183</span><span class="p">,</span><span class="w">  </span><span class="mi">595</span><span class="p">,</span><span class="w">   </span><span class="mi">69</span><span class="p">],</span><span class="w">
       </span><span class="p">[</span><span class="mi">1141</span><span class="p">,</span><span class="w">   </span><span class="mi">76</span><span class="p">,</span><span class="w">  </span><span class="mi">863</span><span class="p">,</span><span class="w"> </span><span class="mi">1343</span><span class="p">,</span><span class="w">  </span><span class="mi">185</span><span class="p">,</span><span class="w">  </span><span class="mi">895</span><span class="p">],</span><span class="w">
       </span><span class="p">[</span><span class="mi">1312</span><span class="p">,</span><span class="w">   </span><span class="mi">50</span><span class="p">,</span><span class="w">  </span><span class="mi">918</span><span class="p">,</span><span class="w">  </span><span class="mi">677</span><span class="p">,</span><span class="w">  </span><span class="mi">394</span><span class="p">,</span><span class="w">  </span><span class="mi">629</span><span class="p">],</span><span class="w">
       </span><span class="p">[</span><span class="mi">1317</span><span class="p">,</span><span class="w">  </span><span class="mi">944</span><span class="p">,</span><span class="w">  </span><span class="mi">466</span><span class="p">,</span><span class="w">  </span><span class="mi">751</span><span class="p">,</span><span class="w"> </span><span class="mi">1050</span><span class="p">,</span><span class="w">  </span><span class="mi">301</span><span class="p">],</span><span class="w">
       </span><span class="p">[</span><span class="w"> </span><span class="mi">415</span><span class="p">,</span><span class="w">  </span><span class="mi">784</span><span class="p">,</span><span class="w">   </span><span class="mi">19</span><span class="p">,</span><span class="w"> </span><span class="mi">1395</span><span class="p">,</span><span class="w"> </span><span class="mi">1223</span><span class="p">,</span><span class="w">  </span><span class="mi">979</span><span class="p">],</span><span class="w">
       </span><span class="p">[</span><span class="w"> </span><span class="mi">252</span><span class="p">,</span><span class="w"> </span><span class="mi">1155</span><span class="p">,</span><span class="w">   </span><span class="mi">59</span><span class="p">,</span><span class="w">  </span><span class="mi">107</span><span class="p">,</span><span class="w">  </span><span class="mi">632</span><span class="p">,</span><span class="w">  </span><span class="mi">995</span><span class="p">],</span><span class="w">
       </span><span class="p">[</span><span class="w"> </span><span class="mi">972</span><span class="p">,</span><span class="w">  </span><span class="mi">867</span><span class="p">,</span><span class="w">  </span><span class="mi">332</span><span class="p">,</span><span class="w">  </span><span class="mi">751</span><span class="p">,</span><span class="w">  </span><span class="mi">810</span><span class="p">,</span><span class="w">   </span><span class="mi">50</span><span class="p">],</span><span class="w">
       </span><span class="p">[</span><span class="w">  </span><span class="mi">55</span><span class="p">,</span><span class="w">  </span><span class="mi">218</span><span class="p">,</span><span class="w">  </span><span class="mi">997</span><span class="p">,</span><span class="w"> </span><span class="mi">1085</span><span class="p">,</span><span class="w">  </span><span class="mi">475</span><span class="p">,</span><span class="w"> </span><span class="mi">1494</span><span class="p">]])</span><span class="w">
</span><span class="err">&gt;&gt;&gt;</span><span class="w">
</span></code></pre></div></div>

<p>As you can see above, while we are calling this a matrix and it will function as a matrix, it is actually an array type.</p>

<h3 id="stacking-arrays">Stacking Arrays</h3>

<p>Two functions can be used to stack arrays, <a href="https://numpy.org/doc/1.18/reference/generated/numpy.vstack.html#numpy.vstack">vstack</a> and <a href="https://numpy.org/doc/1.18/reference/generated/numpy.hstack.html#numpy.hstack">hstack</a>. <code class="language-plaintext highlighter-rouge">vstack</code> stacks the arrays vertically and <code class="language-plaintext highlighter-rouge">hstack</code> stacks the arrays horizontally:</p>

<div class="language-powershell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="err">&gt;&gt;&gt;</span><span class="w"> </span><span class="n">a</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">np.array</span><span class="p">([</span><span class="mi">1</span><span class="p">,</span><span class="w"> </span><span class="mi">2</span><span class="p">,</span><span class="w"> </span><span class="mi">3</span><span class="p">])</span><span class="w">
</span><span class="err">&gt;&gt;&gt;</span><span class="w"> </span><span class="n">print</span><span class="p">(</span><span class="n">a</span><span class="p">)</span><span class="w">
</span><span class="p">[</span><span class="mi">1</span><span class="w"> </span><span class="mi">2</span><span class="w"> </span><span class="mi">3</span><span class="p">]</span><span class="w">
</span><span class="err">&gt;&gt;&gt;</span><span class="w"> </span><span class="n">b</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">np.array</span><span class="p">([</span><span class="mi">4</span><span class="p">,</span><span class="w"> </span><span class="mi">5</span><span class="p">,</span><span class="w"> </span><span class="mi">6</span><span class="p">])</span><span class="w">
</span><span class="err">&gt;&gt;&gt;</span><span class="w"> </span><span class="n">print</span><span class="p">(</span><span class="n">b</span><span class="p">)</span><span class="w">
</span><span class="p">[</span><span class="mi">4</span><span class="w"> </span><span class="mi">5</span><span class="w"> </span><span class="mi">6</span><span class="p">]</span><span class="w">
</span><span class="err">&gt;&gt;&gt;</span><span class="w"> </span><span class="n">c</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">np.vstack</span><span class="p">((</span><span class="n">a</span><span class="p">,</span><span class="w"> </span><span class="nx">b</span><span class="p">))</span><span class="w">
</span><span class="err">&gt;&gt;&gt;</span><span class="w"> </span><span class="n">print</span><span class="p">(</span><span class="n">c</span><span class="p">)</span><span class="w">
</span><span class="p">[[</span><span class="mi">1</span><span class="w"> </span><span class="mi">2</span><span class="w"> </span><span class="mi">3</span><span class="p">]</span><span class="w">
 </span><span class="p">[</span><span class="mi">4</span><span class="w"> </span><span class="mi">5</span><span class="w"> </span><span class="mi">6</span><span class="p">]]</span><span class="w">
</span><span class="err">&gt;&gt;&gt;</span><span class="w"> </span><span class="n">d</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">np.hstack</span><span class="p">((</span><span class="n">a</span><span class="p">,</span><span class="nx">b</span><span class="p">))</span><span class="w">
</span><span class="err">&gt;&gt;&gt;</span><span class="w"> </span><span class="n">print</span><span class="p">(</span><span class="n">d</span><span class="p">)</span><span class="w">
</span><span class="p">[</span><span class="mi">1</span><span class="w"> </span><span class="mi">2</span><span class="w"> </span><span class="mi">3</span><span class="w"> </span><span class="mi">4</span><span class="w"> </span><span class="mi">5</span><span class="w"> </span><span class="mi">6</span><span class="p">]</span><span class="w">
</span><span class="err">&gt;&gt;&gt;</span><span class="w">
</span></code></pre></div></div>

<p>These functions can also be used on a matrix, however the matrices must be of the same dimensions. As an example, let’s do a horizontal stack of a, b, and c:</p>

<div class="language-powershell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="err">&gt;&gt;&gt;</span><span class="w"> </span><span class="n">np.hstack</span><span class="p">((</span><span class="n">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">))</span><span class="w">
</span><span class="n">Traceback</span><span class="w"> </span><span class="p">(</span><span class="n">most</span><span class="w"> </span><span class="nx">recent</span><span class="w"> </span><span class="nx">call</span><span class="w"> </span><span class="nx">last</span><span class="p">):</span><span class="w">
  </span><span class="n">File</span><span class="w"> </span><span class="s2">"&lt;stdin&gt;"</span><span class="p">,</span><span class="w"> </span><span class="nx">line</span><span class="w"> </span><span class="nx">1</span><span class="p">,</span><span class="w"> </span><span class="nx">in</span><span class="w"> </span><span class="err">&lt;</span><span class="nx">module</span><span class="err">&gt;</span><span class="w">
  </span><span class="n">File</span><span class="w"> </span><span class="s2">"&lt;__array_function__ internals&gt;"</span><span class="p">,</span><span class="w"> </span><span class="nx">line</span><span class="w"> </span><span class="nx">5</span><span class="p">,</span><span class="w"> </span><span class="nx">in</span><span class="w"> </span><span class="nx">hstack</span><span class="w">
  </span><span class="n">File</span><span class="w"> </span><span class="s2">"/Users/lfritts/.pyenv/versions/621-3.8.2/lib/python3.8/site-packages/numpy/core/shape_base.py"</span><span class="p">,</span><span class="w"> </span><span class="nx">line</span><span class="w"> </span><span class="nx">343</span><span class="p">,</span><span class="w"> </span><span class="nx">in</span><span class="w"> </span><span class="nx">hstack</span><span class="w">
    </span><span class="kr">return</span><span class="w"> </span><span class="err">_</span><span class="n">nx.concatenate</span><span class="p">(</span><span class="n">arrs</span><span class="p">,</span><span class="w"> </span><span class="nx">0</span><span class="p">)</span><span class="w">
  </span><span class="n">File</span><span class="w"> </span><span class="s2">"&lt;__array_function__ internals&gt;"</span><span class="p">,</span><span class="w"> </span><span class="nx">line</span><span class="w"> </span><span class="nx">5</span><span class="p">,</span><span class="w"> </span><span class="nx">in</span><span class="w"> </span><span class="nx">concatenate</span><span class="w">
</span><span class="n">ValueError:</span><span class="w"> </span><span class="nx">all</span><span class="w"> </span><span class="nx">the</span><span class="w"> </span><span class="nx">input</span><span class="w"> </span><span class="nx">arrays</span><span class="w"> </span><span class="nx">must</span><span class="w"> </span><span class="nx">have</span><span class="w"> </span><span class="nx">same</span><span class="w"> </span><span class="nx">number</span><span class="w"> </span><span class="nx">of</span><span class="w"> </span><span class="nx">dimensions</span><span class="p">,</span><span class="w"> </span><span class="nx">but</span><span class="w"> </span><span class="nx">the</span><span class="w"> </span><span class="nx">array</span><span class="w"> </span><span class="nx">at</span><span class="w"> </span><span class="nx">index</span><span class="w"> </span><span class="nx">0</span><span class="w"> </span><span class="nx">has</span><span class="w"> </span><span class="nx">1</span><span class="w"> </span><span class="nx">dimension</span><span class="p">(</span><span class="n">s</span><span class="p">)</span><span class="w"> </span><span class="n">and</span><span class="w"> </span><span class="nx">the</span><span class="w"> </span><span class="nx">array</span><span class="w"> </span><span class="nx">at</span><span class="w"> </span><span class="nx">index</span><span class="w"> </span><span class="nx">2</span><span class="w"> </span><span class="nx">has</span><span class="w"> </span><span class="nx">2</span><span class="w"> </span><span class="nx">dimension</span><span class="p">(</span><span class="n">s</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<p>This is also an example of a well-formed error message. It is specific in describing the problem. <code class="language-plaintext highlighter-rouge">a</code> (index 0) has one dimension, and <code class="language-plaintext highlighter-rouge">c</code> (index 2) has two dimensions.</p>

<h3 id="the-concatenate-function">The concatenate function</h3>

<p><code class="language-plaintext highlighter-rouge">concatenate</code> joins arrays and/or matrices along an axis. Axis <code class="language-plaintext highlighter-rouge">0</code> stacks them horizontally, axis <code class="language-plaintext highlighter-rouge">1</code> stacks them vertically, and axis <code class="language-plaintext highlighter-rouge">None</code> flattens them into an array.</p>

<p><code class="language-plaintext highlighter-rouge">axis = None</code></p>

<div class="language-powershell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="err">&gt;&gt;&gt;</span><span class="w"> </span><span class="n">a</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">np.array</span><span class="p">([[</span><span class="mi">1</span><span class="p">,</span><span class="w"> </span><span class="mi">2</span><span class="p">],</span><span class="w"> </span><span class="p">[</span><span class="mi">3</span><span class="p">,</span><span class="w"> </span><span class="mi">4</span><span class="p">]])</span><span class="w">  </span><span class="c"># this is a matrix</span><span class="w">
</span><span class="err">&gt;&gt;&gt;</span><span class="w"> </span><span class="n">b</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">np.array</span><span class="p">([[</span><span class="mi">5</span><span class="p">,</span><span class="w"> </span><span class="mi">6</span><span class="p">]])</span><span class="w">
</span><span class="err">&gt;&gt;&gt;</span><span class="w"> </span><span class="n">np.concatenate</span><span class="p">((</span><span class="n">a</span><span class="p">,</span><span class="nx">b</span><span class="p">),</span><span class="w"> </span><span class="n">axis</span><span class="o">=</span><span class="n">None</span><span class="p">)</span><span class="w"> </span><span class="c"># should flatten them</span><span class="w">
</span><span class="n">array</span><span class="p">([</span><span class="mi">1</span><span class="p">,</span><span class="w"> </span><span class="mi">2</span><span class="p">,</span><span class="w"> </span><span class="mi">3</span><span class="p">,</span><span class="w"> </span><span class="mi">4</span><span class="p">,</span><span class="w"> </span><span class="mi">5</span><span class="p">,</span><span class="w"> </span><span class="mi">6</span><span class="p">])</span><span class="w">
</span><span class="err">&gt;&gt;&gt;</span><span class="w">
</span></code></pre></div></div>

<p><code class="language-plaintext highlighter-rouge">axis = 0</code></p>

<div class="language-powershell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="err">&gt;&gt;&gt;</span><span class="w"> </span><span class="n">np.concatenate</span><span class="p">((</span><span class="n">a</span><span class="p">,</span><span class="nx">b</span><span class="p">),</span><span class="w"> </span><span class="n">axis</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="mi">0</span><span class="p">)</span><span class="w">
</span><span class="n">array</span><span class="p">([[</span><span class="mi">1</span><span class="p">,</span><span class="w"> </span><span class="mi">2</span><span class="p">],</span><span class="w">
       </span><span class="p">[</span><span class="mi">3</span><span class="p">,</span><span class="w"> </span><span class="mi">4</span><span class="p">],</span><span class="w">
       </span><span class="p">[</span><span class="mi">5</span><span class="p">,</span><span class="w"> </span><span class="mi">6</span><span class="p">]])</span><span class="w">
</span><span class="err">&gt;&gt;&gt;</span><span class="w">
</span></code></pre></div></div>

<p>Notice the element in <code class="language-plaintext highlighter-rouge">b</code> was appended to the items in <code class="language-plaintext highlighter-rouge">a</code>. But what would happen if <code class="language-plaintext highlighter-rouge">b = [5]</code> instead of <code class="language-plaintext highlighter-rouge">b = [5, 6]</code>? An error would occur.</p>

<div class="language-powershell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="err">&gt;&gt;&gt;</span><span class="w"> </span><span class="n">b</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">np.array</span><span class="p">([</span><span class="mi">5</span><span class="p">])</span><span class="w">
</span><span class="err">&gt;&gt;&gt;</span><span class="w"> </span><span class="n">np.concatenate</span><span class="p">((</span><span class="n">a</span><span class="p">,</span><span class="nx">b</span><span class="p">),</span><span class="w"> </span><span class="n">axis</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="mi">0</span><span class="p">)</span><span class="w">
</span><span class="n">Traceback</span><span class="w"> </span><span class="p">(</span><span class="n">most</span><span class="w"> </span><span class="nx">recent</span><span class="w"> </span><span class="nx">call</span><span class="w"> </span><span class="nx">last</span><span class="p">):</span><span class="w">
  </span><span class="n">File</span><span class="w"> </span><span class="s2">"&lt;stdin&gt;"</span><span class="p">,</span><span class="w"> </span><span class="nx">line</span><span class="w"> </span><span class="nx">1</span><span class="p">,</span><span class="w"> </span><span class="nx">in</span><span class="w"> </span><span class="err">&lt;</span><span class="nx">module</span><span class="err">&gt;</span><span class="w">
  </span><span class="n">File</span><span class="w"> </span><span class="s2">"&lt;__array_function__ internals&gt;"</span><span class="p">,</span><span class="w"> </span><span class="nx">line</span><span class="w"> </span><span class="nx">5</span><span class="p">,</span><span class="w"> </span><span class="nx">in</span><span class="w"> </span><span class="nx">concatenate</span><span class="w">
</span><span class="n">ValueError:</span><span class="w"> </span><span class="nx">all</span><span class="w"> </span><span class="nx">the</span><span class="w"> </span><span class="nx">input</span><span class="w"> </span><span class="nx">arrays</span><span class="w"> </span><span class="nx">must</span><span class="w"> </span><span class="nx">have</span><span class="w"> </span><span class="nx">same</span><span class="w"> </span><span class="nx">number</span><span class="w"> </span><span class="nx">of</span><span class="w"> </span><span class="nx">dimensions</span><span class="p">,</span><span class="w"> </span><span class="nx">but</span><span class="w"> </span><span class="nx">the</span><span class="w"> </span><span class="nx">array</span><span class="w"> </span><span class="nx">at</span><span class="w"> </span><span class="nx">index</span><span class="w"> </span><span class="nx">0</span><span class="w"> </span><span class="nx">has</span><span class="w"> </span><span class="nx">2</span><span class="w"> </span><span class="nx">dimension</span><span class="p">(</span><span class="n">s</span><span class="p">)</span><span class="w"> </span><span class="n">and</span><span class="w"> </span><span class="nx">the</span><span class="w"> </span><span class="nx">array</span><span class="w"> </span><span class="nx">at</span><span class="w"> </span><span class="nx">index</span><span class="w"> </span><span class="nx">1</span><span class="w"> </span><span class="nx">has</span><span class="w"> </span><span class="nx">1</span><span class="w"> </span><span class="nx">dimension</span><span class="p">(</span><span class="n">s</span><span class="p">)</span><span class="w">
</span><span class="err">&gt;&gt;&gt;</span><span class="w">
</span></code></pre></div></div>

<p>Remember, the dimensions must be the same along the axis you are joining.</p>

<p><code class="language-plaintext highlighter-rouge">axis = 1</code></p>

<div class="language-powershell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="err">&gt;&gt;&gt;</span><span class="w"> </span><span class="n">b</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">np.array</span><span class="p">([[</span><span class="mi">5</span><span class="p">,</span><span class="w"> </span><span class="mi">6</span><span class="p">]])</span><span class="w">
</span><span class="err">&gt;&gt;&gt;</span><span class="w"> </span><span class="n">np.concatenate</span><span class="p">((</span><span class="n">a</span><span class="p">,</span><span class="nx">b</span><span class="p">),</span><span class="w"> </span><span class="n">axis</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="mi">1</span><span class="p">)</span><span class="w">
</span><span class="n">Traceback</span><span class="w"> </span><span class="p">(</span><span class="n">most</span><span class="w"> </span><span class="nx">recent</span><span class="w"> </span><span class="nx">call</span><span class="w"> </span><span class="nx">last</span><span class="p">):</span><span class="w">
  </span><span class="n">File</span><span class="w"> </span><span class="s2">"&lt;stdin&gt;"</span><span class="p">,</span><span class="w"> </span><span class="nx">line</span><span class="w"> </span><span class="nx">1</span><span class="p">,</span><span class="w"> </span><span class="nx">in</span><span class="w"> </span><span class="err">&lt;</span><span class="nx">module</span><span class="err">&gt;</span><span class="w">
  </span><span class="n">File</span><span class="w"> </span><span class="s2">"&lt;__array_function__ internals&gt;"</span><span class="p">,</span><span class="w"> </span><span class="nx">line</span><span class="w"> </span><span class="nx">5</span><span class="p">,</span><span class="w"> </span><span class="nx">in</span><span class="w"> </span><span class="nx">concatenate</span><span class="w">
</span><span class="n">ValueError:</span><span class="w"> </span><span class="nx">all</span><span class="w"> </span><span class="nx">the</span><span class="w"> </span><span class="nx">input</span><span class="w"> </span><span class="nx">array</span><span class="w"> </span><span class="nx">dimensions</span><span class="w"> </span><span class="nx">for</span><span class="w"> </span><span class="nx">the</span><span class="w"> </span><span class="nx">concatenation</span><span class="w"> </span><span class="nx">axis</span><span class="w"> </span><span class="nx">must</span><span class="w"> </span><span class="nx">match</span><span class="w"> </span><span class="nx">exactly</span><span class="p">,</span><span class="w"> </span><span class="nx">but</span><span class="w"> </span><span class="nx">along</span><span class="w"> </span><span class="nx">dimension</span><span class="w"> </span><span class="nx">0</span><span class="p">,</span><span class="w"> </span><span class="nx">the</span><span class="w"> </span><span class="nx">array</span><span class="w"> </span><span class="nx">at</span><span class="w"> </span><span class="nx">index</span><span class="w"> </span><span class="nx">0</span><span class="w"> </span><span class="nx">has</span><span class="w"> </span><span class="nx">size</span><span class="w"> </span><span class="nx">2</span><span class="w"> </span><span class="nx">and</span><span class="w"> </span><span class="nx">the</span><span class="w"> </span><span class="nx">array</span><span class="w"> </span><span class="nx">at</span><span class="w"> </span><span class="nx">index</span><span class="w"> </span><span class="nx">1</span><span class="w"> </span><span class="nx">has</span><span class="w"> </span><span class="nx">size</span><span class="w"> </span><span class="nx">1</span><span class="w">
</span><span class="err">&gt;&gt;&gt;</span><span class="w">
</span></code></pre></div></div>

<p>Please take a minute and determine what the problem is before reading on for the fix.</p>

<div class="language-powershell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="err">&gt;&gt;&gt;</span><span class="w"> </span><span class="n">b</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">np.array</span><span class="p">([[</span><span class="mi">5</span><span class="p">,</span><span class="w"> </span><span class="mi">6</span><span class="p">],</span><span class="w"> </span><span class="p">[</span><span class="mi">7</span><span class="p">,</span><span class="w"> </span><span class="mi">8</span><span class="p">]])</span><span class="w">
</span><span class="err">&gt;&gt;&gt;</span><span class="w"> </span><span class="n">np.concatenate</span><span class="p">((</span><span class="n">a</span><span class="p">,</span><span class="nx">b</span><span class="p">),</span><span class="w"> </span><span class="n">axis</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="mi">1</span><span class="p">)</span><span class="w">
</span><span class="n">array</span><span class="p">([[</span><span class="mi">1</span><span class="p">,</span><span class="w"> </span><span class="mi">2</span><span class="p">,</span><span class="w"> </span><span class="mi">5</span><span class="p">,</span><span class="w"> </span><span class="mi">6</span><span class="p">],</span><span class="w">
       </span><span class="p">[</span><span class="mi">3</span><span class="p">,</span><span class="w"> </span><span class="mi">4</span><span class="p">,</span><span class="w"> </span><span class="mi">7</span><span class="p">,</span><span class="w"> </span><span class="mi">8</span><span class="p">]])</span><span class="w">
</span><span class="err">&gt;&gt;&gt;</span><span class="w">
</span></code></pre></div></div>

<h3 id="what-did-we-learn-1">What Did We Learn</h3>

<p>In this lesson, we learned various ways of making matrices and ways to concatenate matrices. It is important to consider the dimensions when concatenating arrays or matrices, regardless of the method.</p>

<h2 id="233-math-operations-on-arraysmatrices">23.3. Math Operations on Arrays/Matrices</h2>

<p><a href="https://numpy.org/">NumPy</a> allows for simple math and linear algebra operations to be used on arrays and matrices. In this lesson, we will look at simple math operands. Here are some <a href="https://numpy.org/doc/stable/reference/routines.linalg.html">linear algebra</a> operations.</p>

<p>Note: If you have never used NumPy before, we strongly suggest you see the first two lessons in this section, What are NumPy Arrays? and Reshaping a Numpy Array into a Matrix.</p>

<h3 id="math-operands-on-arrays-and-matrices">Math Operands on Arrays and Matrices</h3>

<p>In NumPy, math operations are elementwise. That is, NumPy applies the math operand to the zeroth element of each array, and that is the zeroth element of a new array. It does this for each element in the arrays.</p>

<p>Let’s try addition on two arrays. Note that these arrays need the same amount of elements in both arrays when adding:</p>

<div class="language-powershell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="err">&gt;&gt;&gt;</span><span class="w"> </span><span class="n">a</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">np.array</span><span class="p">([</span><span class="mi">1</span><span class="p">,</span><span class="w"> </span><span class="mi">2</span><span class="p">,</span><span class="w"> </span><span class="mi">3</span><span class="p">,</span><span class="w"> </span><span class="mi">4</span><span class="p">,</span><span class="w"> </span><span class="mi">5</span><span class="p">])</span><span class="w">
</span><span class="err">&gt;&gt;&gt;</span><span class="w"> </span><span class="n">b</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">np.array</span><span class="p">([</span><span class="mi">10</span><span class="p">,</span><span class="w"> </span><span class="mi">20</span><span class="p">,</span><span class="w"> </span><span class="mi">30</span><span class="p">,</span><span class="w"> </span><span class="mi">40</span><span class="p">,</span><span class="w"> </span><span class="mi">50</span><span class="p">])</span><span class="w">
</span><span class="err">&gt;&gt;&gt;</span><span class="w"> </span><span class="n">c</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">a</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="nx">b</span><span class="w">
</span><span class="err">&gt;&gt;&gt;</span><span class="w"> </span><span class="n">print</span><span class="p">(</span><span class="n">c</span><span class="p">)</span><span class="w">
</span><span class="p">[</span><span class="mi">11</span><span class="w"> </span><span class="mi">22</span><span class="w"> </span><span class="mi">33</span><span class="w"> </span><span class="mi">44</span><span class="w"> </span><span class="mi">55</span><span class="p">]</span><span class="w">
</span><span class="err">&gt;&gt;&gt;</span><span class="w">
</span></code></pre></div></div>

<p>You can also perform operations between an array and a single value:</p>

<div class="language-powershell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="err">&gt;&gt;&gt;</span><span class="w"> </span><span class="n">print</span><span class="p">(</span><span class="n">a</span><span class="p">)</span><span class="w">
</span><span class="p">[</span><span class="mi">1</span><span class="w"> </span><span class="mi">2</span><span class="w"> </span><span class="mi">3</span><span class="w"> </span><span class="mi">4</span><span class="w"> </span><span class="mi">5</span><span class="p">]</span><span class="w">
</span><span class="err">&gt;&gt;&gt;</span><span class="w"> </span><span class="n">a</span><span class="w"> </span><span class="nx">/</span><span class="w"> </span><span class="nx">2.5</span><span class="w">
</span><span class="n">array</span><span class="p">([</span><span class="mf">0.4</span><span class="p">,</span><span class="w"> </span><span class="mf">0.8</span><span class="p">,</span><span class="w"> </span><span class="mf">1.2</span><span class="p">,</span><span class="w"> </span><span class="mf">1.6</span><span class="p">,</span><span class="w"> </span><span class="mi">2</span><span class="o">.</span><span class="w"> </span><span class="p">])</span><span class="w">
</span><span class="err">&gt;&gt;&gt;</span><span class="w">
</span></code></pre></div></div>

<p>Notice the ints in the array were changed to floats.</p>

<h3 id="linear-algebra">Linear Algebra</h3>

<p>In this lesson, we looked at simple math operands. You can also do linear algebra on arrays and matrices. For more information, see <a href="https://numpy.org/doc/stable/reference/routines.linalg.html">here</a>.</p>

<h2 id="hands-on-lab-23-creating-a-matrix-using-numpy-arrays">Hands-On Lab 23: Creating a Matrix Using NumPy Arrays</h2>
:ET