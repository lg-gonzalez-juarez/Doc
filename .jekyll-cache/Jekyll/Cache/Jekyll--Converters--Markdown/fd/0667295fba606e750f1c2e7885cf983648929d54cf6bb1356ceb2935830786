I"£<h2 id="pypower">Pypower</h2>

<h3 id="1-download-the-package-pypower">1. Download the package Pypower</h3>

<div class="bs-callout bs-callout-info">First, download or clone the package from the <a href="https://rwl.github.io/PYPOWER/">Github repo pypower</a>. In Github, click the <strong>Clone or download</strong> button, and then click <strong>Download ZIP</strong></div>

<div class="alert alert-success" role="alert"><i class="fa fa-download fa-lg"></i> download
<a alt="install process" href="https://pypi.org/project/PYPOWER/">source code PyPower</a>
</div>

<div class="alert alert-success" role="alert"><i class="fa fa-check-square-o"></i> <b>Tip:</b> For a better terminal emulator on Windows, use <a href="https://git-for-windows.github.io/">Git Bash</a>. Git Bash gives you Linux-like control on Windows.</div>

<h3 id="2-install-pypower">2. Install Pypower</h3>

<div class="alert alert-warning" role="alert"><i class="fa fa-warning"></i> <b>Important:</b> If youâ€™ve never installed or run a PyPower site locally on your computer, follow these instructions to install PyPower: <a alt="install process" href="https://rwl.github.io/PYPOWER/install.html">Install Pypower on Windows</a>., info.</div>

<p>code is the following:</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">git</span> <span class="n">clone</span> <span class="n">http</span><span class="p">:</span><span class="o">//</span><span class="n">github</span><span class="p">.</span><span class="n">com</span><span class="o">/</span><span class="n">rwl</span><span class="o">/</span><span class="n">PYPOWER</span><span class="p">.</span><span class="n">git</span>
<span class="n">python</span> <span class="n">setup</span><span class="p">.</span><span class="n">py</span> <span class="n">installl</span>
</code></pre></div></div>
<h3 id="3-commands">3. Commands</h3>
<div class="alert alert-info" role="alert"><i class="fa fa-info-circle"></i> <b>Note:</b><br />
More information above main commands of API PyPower are updated with the latest trends, best practices, and main methods on:</div>

<ul>
  <li><a href="https://rwl.github.io/PYPOWER/api/">Documentation about API</a></li>
  <li><a href="https://rwl.github.io/PYPOWER/usage.html#application-programming-interface">github-pages PyPower</a></li>
</ul>

<h3 id="usage">usage</h3>
<p>from https://pypi.org/project/PYPOWER/</p>

<p>to list the commands options</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">pf</span> <span class="n">h</span>
</code></pre></div></div>

<p>PYPOWER includes a selection of test cases. For example, to run a power flow on the IEEE 14 bus test case:</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">pf</span> <span class="o">-</span><span class="n">c</span> <span class="n">case14</span>
</code></pre></div></div>

<p>The opf command has the same calling syntax. For example, to solve an OPF for the IEEE Reliability Test System and write the solved case to file:</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">opf</span> <span class="o">-</span><span class="n">c</span> <span class="n">case24_ieee_rts</span> <span class="o">--</span><span class="n">solvedcase</span><span class="o">=</span><span class="n">rtsout</span><span class="p">.</span><span class="n">py</span>
</code></pre></div></div>

<h3 id="command-dc-power-flow">Command DC power flow</h3>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">from</span> <span class="nn">pypower.api</span> <span class="kn">import</span> <span class="n">case9</span><span class="p">,</span> <span class="n">ppoption</span><span class="p">,</span> <span class="n">rundcpf</span>
<span class="n">ppc</span> <span class="o">=</span> <span class="n">case9</span><span class="p">()</span>
<span class="n">ppopt</span> <span class="o">=</span> <span class="n">ppoption</span><span class="p">(</span><span class="n">PF_ALG</span><span class="o">=</span><span class="mi">2</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="s">"load case and execute dcpf"</span><span class="p">)</span>
<span class="n">ppc</span> <span class="o">=</span> <span class="n">case9</span><span class="p">()</span>
<span class="n">r</span> <span class="o">=</span> <span class="n">rundcpf</span><span class="p">(</span><span class="n">ppc</span><span class="p">,</span> <span class="n">ppopt</span><span class="p">)</span>
</code></pre></div></div>

<h3 id="links">links</h3>
<ul>
  <li><a href="http://www.pserc.cornell.edu/matpower/">MATPOWER from PSERC - Cornell</a></li>
  <li><a href="http://www.esat.kuleuven.be/electa/teaching/matdyn/">MatDyn by Stijn Cole</a></li>
  <li><a href="http://www.uclm.es/area/gsee/web/Federico/psat.htm">PSAT by Federico Milano</a></li>
  <li><a href="http://sourceforge.net/projects/electricdss/">OpenDSS from EPRI</a></li>
  <li><a href="http://sourceforge.net/projects/gridlab-d/">GridLAB-D from PNNL</a></li>
  <li><a href="http://www.pycim.org/">PyCIM</a></li>
</ul>

:ET