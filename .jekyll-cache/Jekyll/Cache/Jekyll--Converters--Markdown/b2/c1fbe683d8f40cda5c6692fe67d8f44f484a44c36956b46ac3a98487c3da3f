I"<h2 id="tuples">Tuples</h2>

<p>The most common immutable sequence type that we’re going to work with is going to be the tuple.</p>

<h3 id="documentation-for-this-video">Documentation For This Video</h3>

<ul>
  <li><a href="https://docs.python.org/3/library/stdtypes.html#sequence-types-list-tuple-range">Sequence Types</a></li>
  <li><a href="https://docs.python.org/3/library/stdtypes.html#tuple">Tuples</a></li>
</ul>

<h3 id="tuples-1">Tuples</h3>

<p>Tuples are a fixed width, immutable sequence type. We create tuples using parenthesis (()) and at least one comma (,):</p>

<pre><code class="language-mcd">&gt;&gt;&gt; point = (2.0, 3.0)
</code></pre>

<p>Since tuples are immutable, we don’t have access to the same methods that we do on a list. We can use tuples in some operations like concatenation, but we can’t change the original tuple that we created:</p>

<pre><code class="language-mcd">&gt;&gt;&gt; point_3d = point + (4.0,)
&gt;&gt;&gt; point_3d
(2.0, 3.0, 4.0)
</code></pre>

<p>One interesting characteristic of tuples is that we can unpack them into multiple variables at the same time:</p>

<pre><code class="language-mcd">&gt;&gt;&gt; x, y, z = point_3d
&gt;&gt;&gt; x
2.0
&gt;&gt;&gt; y
3.0
&gt;&gt;&gt; z
4.0
</code></pre>

<p>When we’ll most likely to see tuples is while looking at a format string that’s compatible with Python 2 (though this will go away soon):</p>

<pre><code class="language-mcd">&gt;&gt;&gt; print("My name is: %s %s" % ("Keith", "Thompson"))
</code></pre>

<h2 id="dictionaries">Dictionaries</h2>

:ET